Prefix(:=<http://swat.cse.lehigh.edu/onto/univ-bench.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://swat.cse.lehigh.edu/onto/univ-bench.owl>
Annotation(owl:versionInfo "univ-bench-ontology-owl, ver April 1, 2004")
Annotation(rdfs:label "Univ-bench Ontology")
Annotation(rdfs:comment "An university ontology for benchmark tests")

Declaration(Class(:AdministrativeStaff))
AnnotationAssertion(rdfs:label :AdministrativeStaff "administrative staff worker")
SubClassOf(:AdministrativeStaff :Employee)
DisjointClasses(:AdministrativeStaff :Faculty)
Declaration(Class(:Article))
AnnotationAssertion(rdfs:label :Article "article")
SubClassOf(:Article :Publication)
DisjointClasses(:Article :Book)
DisjointClasses(:Article :Manual)
DisjointClasses(:Article :Software)
DisjointClasses(:Article :Specification)
DisjointClasses(:Article :UnofficialPublication)
Declaration(Class(:AssistantProfessor))
AnnotationAssertion(rdfs:label :AssistantProfessor "assistant professor")
SubClassOf(:AssistantProfessor :Professor)
DisjointClasses(:AssistantProfessor :AssociateProfessor)
DisjointClasses(:AssistantProfessor :Dean)
DisjointClasses(:AssistantProfessor :ExDean)
DisjointClasses(:AssistantProfessor :FullProfessor)
DisjointClasses(:AssistantProfessor :VisitingProfessor)
Declaration(Class(:AssociateProfessor))
AnnotationAssertion(rdfs:label :AssociateProfessor "associate professor")
SubClassOf(:AssociateProfessor :Professor)
DisjointClasses(:AssociateProfessor :AssistantProfessor)
DisjointClasses(:AssociateProfessor :Dean)
DisjointClasses(:AssociateProfessor :ExDean)
DisjointClasses(:AssociateProfessor :FullProfessor)
DisjointClasses(:AssociateProfessor :VisitingProfessor)
Declaration(Class(:BachelorExam))
SubClassOf(:BachelorExam :Exam)
Declaration(Class(:Book))
AnnotationAssertion(rdfs:label :Book "book")
SubClassOf(:Book :Publication)
DisjointClasses(:Book :Article)
DisjointClasses(:Book :Manual)
DisjointClasses(:Book :Software)
DisjointClasses(:Book :Specification)
DisjointClasses(:Book :UnofficialPublication)
Declaration(Class(:ClericalStaff))
AnnotationAssertion(rdfs:label :ClericalStaff "clerical staff worker")
SubClassOf(:ClericalStaff :AdministrativeStaff)
DisjointClasses(:ClericalStaff :SystemsStaff)
Declaration(Class(:College))
AnnotationAssertion(rdfs:label :College "school")
SubClassOf(:College :Organization)
DisjointClasses(:College :Department)
DisjointClasses(:College :Institute)
DisjointClasses(:College :Program)
DisjointClasses(:College :ResearchGroup)
DisjointClasses(:College :University)
Declaration(Class(:ConferencePaper))
AnnotationAssertion(rdfs:label :ConferencePaper "conference paper")
SubClassOf(:ConferencePaper :Article)
DisjointClasses(:ConferencePaper :JournalArticle)
DisjointClasses(:ConferencePaper :TechnicalReport)
Declaration(Class(:Course))
AnnotationAssertion(rdfs:label :Course "teaching course")
SubClassOf(:Course :Work)
SubClassOf(:Course ObjectSomeValuesFrom(ObjectInverseOf(:takesCourse) owl:Thing))
SubClassOf(:Course ObjectSomeValuesFrom(ObjectInverseOf(:teacherOf) owl:Thing))
SubClassOf(:Course ObjectSomeValuesFrom(ObjectInverseOf(:teachingAssistantOf) owl:Thing))
DisjointClasses(:Course :Exam)
DisjointClasses(:Course :ExamRecord)
DisjointClasses(:Course :Research)
Declaration(Class(:Dean))
AnnotationAssertion(rdfs:label :Dean "dean")
SubClassOf(:Dean :Professor)
SubClassOf(:Dean ObjectSomeValuesFrom(:headOf :College))
DisjointClasses(:Dean :AssistantProfessor)
DisjointClasses(:Dean :AssociateProfessor)
DisjointClasses(:Dean :ExDean)
DisjointClasses(:Dean :FullProfessor)
DisjointClasses(:Dean :VisitingProfessor)
Declaration(Class(:Department))
AnnotationAssertion(rdfs:label :Department "university department")
SubClassOf(:Department :Organization)
SubClassOf(:Department ObjectSomeValuesFrom(ObjectInverseOf(:memberOf) :Student))
SubClassOf(:Department ObjectSomeValuesFrom(ObjectInverseOf(:worksFor) :Faculty))
DisjointClasses(:Department :College)
DisjointClasses(:Department :Institute)
DisjointClasses(:Department :Program)
DisjointClasses(:Department :ResearchGroup)
DisjointClasses(:Department :University)
Declaration(Class(:Director))
AnnotationAssertion(rdfs:label :Director "director")
SubClassOf(:Director :Person)
SubClassOf(:Director ObjectSomeValuesFrom(:headOf :Program))
DisjointClasses(:Director :GraduateStudent)
DisjointClasses(:Director :ResearchAssistant)
DisjointClasses(:Director :Student)
DisjointClasses(:Director :TeachingAssistant)
Declaration(Class(:Employee))
AnnotationAssertion(rdfs:label :Employee "Employee")
SubClassOf(:Employee :Person)
SubClassOf(:Employee ObjectSomeValuesFrom(:worksFor owl:Thing))
DisjointClasses(:Employee :TeachingAssistant)
Declaration(Class(:ExDean))
SubClassOf(:ExDean :Professor)
DisjointClasses(:ExDean :AssistantProfessor)
DisjointClasses(:ExDean :AssociateProfessor)
DisjointClasses(:ExDean :Dean)
DisjointClasses(:ExDean :FullProfessor)
DisjointClasses(:ExDean :VisitingProfessor)
Declaration(Class(:Exam))
SubClassOf(:Exam :Work)
DisjointClasses(:Exam :Course)
DisjointClasses(:Exam :ExamRecord)
DisjointClasses(:Exam :Research)
Declaration(Class(:ExamRecord))
SubClassOf(:ExamRecord :Work)
DisjointClasses(:ExamRecord :Course)
DisjointClasses(:ExamRecord :Exam)
DisjointClasses(:ExamRecord :Research)
Declaration(Class(:Faculty))
AnnotationAssertion(rdfs:label :Faculty "faculty member")
SubClassOf(:Faculty :Employee)
SubClassOf(:Faculty ObjectSomeValuesFrom(:doctoralDegreeFrom :University))
SubClassOf(:Faculty ObjectSomeValuesFrom(:mastersDegreeFrom :University))
SubClassOf(:Faculty ObjectSomeValuesFrom(:undergraduateDegreeFrom :University))
SubClassOf(:Faculty ObjectSomeValuesFrom(:worksFor :Department))
SubClassOf(:Faculty ObjectSomeValuesFrom(ObjectInverseOf(:publicationAuthor) owl:Thing))
DisjointClasses(:Faculty :AdministrativeStaff)
Declaration(Class(:FullProfessor))
AnnotationAssertion(rdfs:label :FullProfessor "full professor")
SubClassOf(:FullProfessor :Professor)
DisjointClasses(:FullProfessor :AssistantProfessor)
DisjointClasses(:FullProfessor :AssociateProfessor)
DisjointClasses(:FullProfessor :Dean)
DisjointClasses(:FullProfessor :ExDean)
DisjointClasses(:FullProfessor :VisitingProfessor)
Declaration(Class(:GraduateCourse))
AnnotationAssertion(rdfs:label :GraduateCourse "Graduate Level Courses")
SubClassOf(:GraduateCourse :Course)
Declaration(Class(:GraduateStudent))
AnnotationAssertion(rdfs:label :GraduateStudent "graduate student")
SubClassOf(:GraduateStudent :Person)
SubClassOf(:GraduateStudent ObjectSomeValuesFrom(:advisor owl:Thing))
SubClassOf(:GraduateStudent ObjectSomeValuesFrom(:takesCourse :GraduateCourse))
SubClassOf(:GraduateStudent ObjectSomeValuesFrom(:undergraduateDegreeFrom :University))
DisjointClasses(:GraduateStudent :Director)
DisjointClasses(:GraduateStudent :chair)
Declaration(Class(:Institute))
AnnotationAssertion(rdfs:label :Institute "institute")
SubClassOf(:Institute :Organization)
DisjointClasses(:Institute :College)
DisjointClasses(:Institute :Department)
DisjointClasses(:Institute :Program)
DisjointClasses(:Institute :ResearchGroup)
DisjointClasses(:Institute :University)
Declaration(Class(:JournalArticle))
AnnotationAssertion(rdfs:label :JournalArticle "journal article")
SubClassOf(:JournalArticle :Article)
DisjointClasses(:JournalArticle :ConferencePaper)
DisjointClasses(:JournalArticle :TechnicalReport)
Declaration(Class(:Lecturer))
AnnotationAssertion(rdfs:label :Lecturer "lecturer")
SubClassOf(:Lecturer :Faculty)
SubClassOf(:Lecturer ObjectSomeValuesFrom(:teacherOf owl:Thing))
DisjointClasses(:Lecturer :PostDoc)
DisjointClasses(:Lecturer :Professor)
Declaration(Class(:Manual))
AnnotationAssertion(rdfs:label :Manual "manual")
SubClassOf(:Manual :Publication)
DisjointClasses(:Manual :Article)
DisjointClasses(:Manual :Book)
DisjointClasses(:Manual :Software)
DisjointClasses(:Manual :Specification)
DisjointClasses(:Manual :UnofficialPublication)
Declaration(Class(:Organization))
AnnotationAssertion(rdfs:label :Organization "organization")
DisjointClasses(:Organization :Person)
DisjointClasses(:Organization :Publication)
DisjointClasses(:Organization :Schedule)
DisjointClasses(:Organization :Work)
Declaration(Class(:Person))
AnnotationAssertion(rdfs:label :Person "person")
DisjointClasses(:Person :Organization)
DisjointClasses(:Person :Publication)
DisjointClasses(:Person :Schedule)
DisjointClasses(:Person :Work)
Declaration(Class(:PostDoc))
AnnotationAssertion(rdfs:label :PostDoc "post doctorate")
SubClassOf(:PostDoc :Faculty)
DisjointClasses(:PostDoc :Lecturer)
DisjointClasses(:PostDoc :Professor)
Declaration(Class(:Professor))
AnnotationAssertion(rdfs:label :Professor "professor")
SubClassOf(:Professor :Faculty)
SubClassOf(:Professor ObjectSomeValuesFrom(:teacherOf owl:Thing))
SubClassOf(:Professor ObjectSomeValuesFrom(ObjectInverseOf(:advisor) owl:Thing))
DisjointClasses(:Professor :Lecturer)
DisjointClasses(:Professor :PostDoc)
Declaration(Class(:Program))
AnnotationAssertion(rdfs:label :Program "program")
SubClassOf(:Program :Organization)
DisjointClasses(:Program :College)
DisjointClasses(:Program :Department)
DisjointClasses(:Program :Institute)
DisjointClasses(:Program :ResearchGroup)
DisjointClasses(:Program :University)
Declaration(Class(:Publication))
AnnotationAssertion(rdfs:label :Publication "publication")
SubClassOf(:Publication ObjectSomeValuesFrom(:publicationAuthor owl:Thing))
SubClassOf(:Publication ObjectSomeValuesFrom(:publicationResearch owl:Thing))
SubClassOf(:Publication ObjectSomeValuesFrom(ObjectInverseOf(:orgPublication) owl:Thing))
DisjointClasses(:Publication :Organization)
DisjointClasses(:Publication :Person)
DisjointClasses(:Publication :Schedule)
DisjointClasses(:Publication :Work)
Declaration(Class(:Research))
AnnotationAssertion(rdfs:label :Research "research work")
SubClassOf(:Research :Work)
SubClassOf(:Research ObjectSomeValuesFrom(ObjectInverseOf(:publicationResearch) owl:Thing))
DisjointClasses(:Research :Course)
DisjointClasses(:Research :Exam)
DisjointClasses(:Research :ExamRecord)
Declaration(Class(:ResearchAssistant))
AnnotationAssertion(rdfs:label :ResearchAssistant "university research assistant")
SubClassOf(:ResearchAssistant :Person)
SubClassOf(:ResearchAssistant ObjectSomeValuesFrom(:worksFor :ResearchGroup))
DisjointClasses(:ResearchAssistant :Director)
DisjointClasses(:ResearchAssistant :chair)
Declaration(Class(:ResearchGroup))
AnnotationAssertion(rdfs:label :ResearchGroup "research group")
SubClassOf(:ResearchGroup :Organization)
SubClassOf(:ResearchGroup ObjectSomeValuesFrom(:researchProject owl:Thing))
DisjointClasses(:ResearchGroup :College)
DisjointClasses(:ResearchGroup :Department)
DisjointClasses(:ResearchGroup :Institute)
DisjointClasses(:ResearchGroup :Program)
DisjointClasses(:ResearchGroup :University)
Declaration(Class(:Schedule))
AnnotationAssertion(rdfs:label :Schedule "schedule")
DisjointClasses(:Schedule :Organization)
DisjointClasses(:Schedule :Person)
DisjointClasses(:Schedule :Publication)
DisjointClasses(:Schedule :Work)
Declaration(Class(:Software))
AnnotationAssertion(rdfs:label :Software "software program")
SubClassOf(:Software :Publication)
DisjointClasses(:Software :Article)
DisjointClasses(:Software :Book)
DisjointClasses(:Software :Manual)
DisjointClasses(:Software :Specification)
DisjointClasses(:Software :UnofficialPublication)
Declaration(Class(:Specification))
AnnotationAssertion(rdfs:label :Specification "published specification")
SubClassOf(:Specification :Publication)
DisjointClasses(:Specification :Article)
DisjointClasses(:Specification :Book)
DisjointClasses(:Specification :Manual)
DisjointClasses(:Specification :Software)
DisjointClasses(:Specification :UnofficialPublication)
Declaration(Class(:Student))
AnnotationAssertion(rdfs:label :Student "student")
SubClassOf(:Student :Person)
SubClassOf(:Student ObjectSomeValuesFrom(:memberOf :Department))
SubClassOf(:Student ObjectSomeValuesFrom(:takesCourse owl:Thing))
DisjointClasses(:Student :Director)
DisjointClasses(:Student :chair)
Declaration(Class(:Subj10Course))
SubClassOf(:Subj10Course :Course)
DisjointClasses(:Subj10Course :Subj11Course)
DisjointClasses(:Subj10Course :Subj12Course)
DisjointClasses(:Subj10Course :Subj13Course)
DisjointClasses(:Subj10Course :Subj14Course)
DisjointClasses(:Subj10Course :Subj15Course)
DisjointClasses(:Subj10Course :Subj16Course)
DisjointClasses(:Subj10Course :Subj17Course)
DisjointClasses(:Subj10Course :Subj18Course)
DisjointClasses(:Subj10Course :Subj19Course)
DisjointClasses(:Subj10Course :Subj1Course)
DisjointClasses(:Subj10Course :Subj20Course)
DisjointClasses(:Subj10Course :Subj2Course)
DisjointClasses(:Subj10Course :Subj3Course)
DisjointClasses(:Subj10Course :Subj4Course)
DisjointClasses(:Subj10Course :Subj5Course)
DisjointClasses(:Subj10Course :Subj6Course)
DisjointClasses(:Subj10Course :Subj7Course)
DisjointClasses(:Subj10Course :Subj8Course)
DisjointClasses(:Subj10Course :Subj9Course)
Declaration(Class(:Subj10Department))
SubClassOf(:Subj10Department :Department)
DisjointClasses(:Subj10Department :Subj11Department)
DisjointClasses(:Subj10Department :Subj12Department)
DisjointClasses(:Subj10Department :Subj13Department)
DisjointClasses(:Subj10Department :Subj14Department)
DisjointClasses(:Subj10Department :Subj15Department)
DisjointClasses(:Subj10Department :Subj16Department)
DisjointClasses(:Subj10Department :Subj17Department)
DisjointClasses(:Subj10Department :Subj18Department)
DisjointClasses(:Subj10Department :Subj19Department)
DisjointClasses(:Subj10Department :Subj1Department)
DisjointClasses(:Subj10Department :Subj20Department)
DisjointClasses(:Subj10Department :Subj2Department)
DisjointClasses(:Subj10Department :Subj3Department)
DisjointClasses(:Subj10Department :Subj4Department)
DisjointClasses(:Subj10Department :Subj5Department)
DisjointClasses(:Subj10Department :Subj6Department)
DisjointClasses(:Subj10Department :Subj7Department)
DisjointClasses(:Subj10Department :Subj8Department)
DisjointClasses(:Subj10Department :Subj9Department)
Declaration(Class(:Subj10Professor))
SubClassOf(:Subj10Professor :Professor)
DisjointClasses(:Subj10Professor :Subj11Professor)
DisjointClasses(:Subj10Professor :Subj12Professor)
DisjointClasses(:Subj10Professor :Subj13Professor)
DisjointClasses(:Subj10Professor :Subj14Professor)
DisjointClasses(:Subj10Professor :Subj15Professor)
DisjointClasses(:Subj10Professor :Subj16Professor)
DisjointClasses(:Subj10Professor :Subj17Professor)
DisjointClasses(:Subj10Professor :Subj18Professor)
DisjointClasses(:Subj10Professor :Subj19Professor)
DisjointClasses(:Subj10Professor :Subj1Professor)
DisjointClasses(:Subj10Professor :Subj20Professor)
DisjointClasses(:Subj10Professor :Subj2Professor)
DisjointClasses(:Subj10Professor :Subj3Professor)
DisjointClasses(:Subj10Professor :Subj4Professor)
DisjointClasses(:Subj10Professor :Subj5Professor)
DisjointClasses(:Subj10Professor :Subj6Professor)
DisjointClasses(:Subj10Professor :Subj7Professor)
DisjointClasses(:Subj10Professor :Subj8Professor)
DisjointClasses(:Subj10Professor :Subj9Professor)
Declaration(Class(:Subj10Student))
SubClassOf(:Subj10Student :Student)
Declaration(Class(:Subj11Course))
SubClassOf(:Subj11Course :Course)
DisjointClasses(:Subj11Course :Subj10Course)
DisjointClasses(:Subj11Course :Subj12Course)
DisjointClasses(:Subj11Course :Subj13Course)
DisjointClasses(:Subj11Course :Subj14Course)
DisjointClasses(:Subj11Course :Subj15Course)
DisjointClasses(:Subj11Course :Subj16Course)
DisjointClasses(:Subj11Course :Subj17Course)
DisjointClasses(:Subj11Course :Subj18Course)
DisjointClasses(:Subj11Course :Subj19Course)
DisjointClasses(:Subj11Course :Subj1Course)
DisjointClasses(:Subj11Course :Subj20Course)
DisjointClasses(:Subj11Course :Subj2Course)
DisjointClasses(:Subj11Course :Subj3Course)
DisjointClasses(:Subj11Course :Subj4Course)
DisjointClasses(:Subj11Course :Subj5Course)
DisjointClasses(:Subj11Course :Subj6Course)
DisjointClasses(:Subj11Course :Subj7Course)
DisjointClasses(:Subj11Course :Subj8Course)
DisjointClasses(:Subj11Course :Subj9Course)
Declaration(Class(:Subj11Department))
SubClassOf(:Subj11Department :Department)
DisjointClasses(:Subj11Department :Subj10Department)
DisjointClasses(:Subj11Department :Subj12Department)
DisjointClasses(:Subj11Department :Subj13Department)
DisjointClasses(:Subj11Department :Subj14Department)
DisjointClasses(:Subj11Department :Subj15Department)
DisjointClasses(:Subj11Department :Subj16Department)
DisjointClasses(:Subj11Department :Subj17Department)
DisjointClasses(:Subj11Department :Subj18Department)
DisjointClasses(:Subj11Department :Subj19Department)
DisjointClasses(:Subj11Department :Subj1Department)
DisjointClasses(:Subj11Department :Subj20Department)
DisjointClasses(:Subj11Department :Subj2Department)
DisjointClasses(:Subj11Department :Subj3Department)
DisjointClasses(:Subj11Department :Subj4Department)
DisjointClasses(:Subj11Department :Subj5Department)
DisjointClasses(:Subj11Department :Subj6Department)
DisjointClasses(:Subj11Department :Subj7Department)
DisjointClasses(:Subj11Department :Subj8Department)
DisjointClasses(:Subj11Department :Subj9Department)
Declaration(Class(:Subj11Professor))
SubClassOf(:Subj11Professor :Professor)
DisjointClasses(:Subj11Professor :Subj10Professor)
DisjointClasses(:Subj11Professor :Subj12Professor)
DisjointClasses(:Subj11Professor :Subj13Professor)
DisjointClasses(:Subj11Professor :Subj14Professor)
DisjointClasses(:Subj11Professor :Subj15Professor)
DisjointClasses(:Subj11Professor :Subj16Professor)
DisjointClasses(:Subj11Professor :Subj17Professor)
DisjointClasses(:Subj11Professor :Subj18Professor)
DisjointClasses(:Subj11Professor :Subj19Professor)
DisjointClasses(:Subj11Professor :Subj1Professor)
DisjointClasses(:Subj11Professor :Subj20Professor)
DisjointClasses(:Subj11Professor :Subj2Professor)
DisjointClasses(:Subj11Professor :Subj3Professor)
DisjointClasses(:Subj11Professor :Subj4Professor)
DisjointClasses(:Subj11Professor :Subj5Professor)
DisjointClasses(:Subj11Professor :Subj6Professor)
DisjointClasses(:Subj11Professor :Subj7Professor)
DisjointClasses(:Subj11Professor :Subj8Professor)
DisjointClasses(:Subj11Professor :Subj9Professor)
Declaration(Class(:Subj11Student))
SubClassOf(:Subj11Student :Student)
Declaration(Class(:Subj12Course))
SubClassOf(:Subj12Course :Course)
DisjointClasses(:Subj12Course :Subj10Course)
DisjointClasses(:Subj12Course :Subj11Course)
DisjointClasses(:Subj12Course :Subj13Course)
DisjointClasses(:Subj12Course :Subj14Course)
DisjointClasses(:Subj12Course :Subj15Course)
DisjointClasses(:Subj12Course :Subj16Course)
DisjointClasses(:Subj12Course :Subj17Course)
DisjointClasses(:Subj12Course :Subj18Course)
DisjointClasses(:Subj12Course :Subj19Course)
DisjointClasses(:Subj12Course :Subj1Course)
DisjointClasses(:Subj12Course :Subj20Course)
DisjointClasses(:Subj12Course :Subj2Course)
DisjointClasses(:Subj12Course :Subj3Course)
DisjointClasses(:Subj12Course :Subj4Course)
DisjointClasses(:Subj12Course :Subj5Course)
DisjointClasses(:Subj12Course :Subj6Course)
DisjointClasses(:Subj12Course :Subj7Course)
DisjointClasses(:Subj12Course :Subj8Course)
DisjointClasses(:Subj12Course :Subj9Course)
Declaration(Class(:Subj12Department))
SubClassOf(:Subj12Department :Department)
DisjointClasses(:Subj12Department :Subj10Department)
DisjointClasses(:Subj12Department :Subj11Department)
DisjointClasses(:Subj12Department :Subj13Department)
DisjointClasses(:Subj12Department :Subj14Department)
DisjointClasses(:Subj12Department :Subj15Department)
DisjointClasses(:Subj12Department :Subj16Department)
DisjointClasses(:Subj12Department :Subj17Department)
DisjointClasses(:Subj12Department :Subj18Department)
DisjointClasses(:Subj12Department :Subj19Department)
DisjointClasses(:Subj12Department :Subj1Department)
DisjointClasses(:Subj12Department :Subj20Department)
DisjointClasses(:Subj12Department :Subj2Department)
DisjointClasses(:Subj12Department :Subj3Department)
DisjointClasses(:Subj12Department :Subj4Department)
DisjointClasses(:Subj12Department :Subj5Department)
DisjointClasses(:Subj12Department :Subj6Department)
DisjointClasses(:Subj12Department :Subj7Department)
DisjointClasses(:Subj12Department :Subj8Department)
DisjointClasses(:Subj12Department :Subj9Department)
Declaration(Class(:Subj12Professor))
SubClassOf(:Subj12Professor :Professor)
DisjointClasses(:Subj12Professor :Subj10Professor)
DisjointClasses(:Subj12Professor :Subj11Professor)
DisjointClasses(:Subj12Professor :Subj13Professor)
DisjointClasses(:Subj12Professor :Subj14Professor)
DisjointClasses(:Subj12Professor :Subj15Professor)
DisjointClasses(:Subj12Professor :Subj16Professor)
DisjointClasses(:Subj12Professor :Subj17Professor)
DisjointClasses(:Subj12Professor :Subj18Professor)
DisjointClasses(:Subj12Professor :Subj19Professor)
DisjointClasses(:Subj12Professor :Subj1Professor)
DisjointClasses(:Subj12Professor :Subj20Professor)
DisjointClasses(:Subj12Professor :Subj2Professor)
DisjointClasses(:Subj12Professor :Subj3Professor)
DisjointClasses(:Subj12Professor :Subj4Professor)
DisjointClasses(:Subj12Professor :Subj5Professor)
DisjointClasses(:Subj12Professor :Subj6Professor)
DisjointClasses(:Subj12Professor :Subj7Professor)
DisjointClasses(:Subj12Professor :Subj8Professor)
DisjointClasses(:Subj12Professor :Subj9Professor)
Declaration(Class(:Subj12Student))
SubClassOf(:Subj12Student :Student)
Declaration(Class(:Subj13Course))
SubClassOf(:Subj13Course :Course)
DisjointClasses(:Subj13Course :Subj10Course)
DisjointClasses(:Subj13Course :Subj11Course)
DisjointClasses(:Subj13Course :Subj12Course)
DisjointClasses(:Subj13Course :Subj14Course)
DisjointClasses(:Subj13Course :Subj15Course)
DisjointClasses(:Subj13Course :Subj16Course)
DisjointClasses(:Subj13Course :Subj17Course)
DisjointClasses(:Subj13Course :Subj18Course)
DisjointClasses(:Subj13Course :Subj19Course)
DisjointClasses(:Subj13Course :Subj1Course)
DisjointClasses(:Subj13Course :Subj20Course)
DisjointClasses(:Subj13Course :Subj2Course)
DisjointClasses(:Subj13Course :Subj3Course)
DisjointClasses(:Subj13Course :Subj4Course)
DisjointClasses(:Subj13Course :Subj5Course)
DisjointClasses(:Subj13Course :Subj6Course)
DisjointClasses(:Subj13Course :Subj7Course)
DisjointClasses(:Subj13Course :Subj8Course)
DisjointClasses(:Subj13Course :Subj9Course)
Declaration(Class(:Subj13Department))
SubClassOf(:Subj13Department :Department)
DisjointClasses(:Subj13Department :Subj10Department)
DisjointClasses(:Subj13Department :Subj11Department)
DisjointClasses(:Subj13Department :Subj12Department)
DisjointClasses(:Subj13Department :Subj14Department)
DisjointClasses(:Subj13Department :Subj15Department)
DisjointClasses(:Subj13Department :Subj16Department)
DisjointClasses(:Subj13Department :Subj17Department)
DisjointClasses(:Subj13Department :Subj18Department)
DisjointClasses(:Subj13Department :Subj19Department)
DisjointClasses(:Subj13Department :Subj1Department)
DisjointClasses(:Subj13Department :Subj20Department)
DisjointClasses(:Subj13Department :Subj2Department)
DisjointClasses(:Subj13Department :Subj3Department)
DisjointClasses(:Subj13Department :Subj4Department)
DisjointClasses(:Subj13Department :Subj5Department)
DisjointClasses(:Subj13Department :Subj6Department)
DisjointClasses(:Subj13Department :Subj7Department)
DisjointClasses(:Subj13Department :Subj8Department)
DisjointClasses(:Subj13Department :Subj9Department)
Declaration(Class(:Subj13Professor))
SubClassOf(:Subj13Professor :Professor)
DisjointClasses(:Subj13Professor :Subj10Professor)
DisjointClasses(:Subj13Professor :Subj11Professor)
DisjointClasses(:Subj13Professor :Subj12Professor)
DisjointClasses(:Subj13Professor :Subj14Professor)
DisjointClasses(:Subj13Professor :Subj15Professor)
DisjointClasses(:Subj13Professor :Subj16Professor)
DisjointClasses(:Subj13Professor :Subj17Professor)
DisjointClasses(:Subj13Professor :Subj18Professor)
DisjointClasses(:Subj13Professor :Subj19Professor)
DisjointClasses(:Subj13Professor :Subj1Professor)
DisjointClasses(:Subj13Professor :Subj20Professor)
DisjointClasses(:Subj13Professor :Subj2Professor)
DisjointClasses(:Subj13Professor :Subj3Professor)
DisjointClasses(:Subj13Professor :Subj4Professor)
DisjointClasses(:Subj13Professor :Subj5Professor)
DisjointClasses(:Subj13Professor :Subj6Professor)
DisjointClasses(:Subj13Professor :Subj7Professor)
DisjointClasses(:Subj13Professor :Subj8Professor)
DisjointClasses(:Subj13Professor :Subj9Professor)
Declaration(Class(:Subj13Student))
SubClassOf(:Subj13Student :Student)
Declaration(Class(:Subj14Course))
SubClassOf(:Subj14Course :Course)
DisjointClasses(:Subj14Course :Subj10Course)
DisjointClasses(:Subj14Course :Subj11Course)
DisjointClasses(:Subj14Course :Subj12Course)
DisjointClasses(:Subj14Course :Subj13Course)
DisjointClasses(:Subj14Course :Subj15Course)
DisjointClasses(:Subj14Course :Subj16Course)
DisjointClasses(:Subj14Course :Subj17Course)
DisjointClasses(:Subj14Course :Subj18Course)
DisjointClasses(:Subj14Course :Subj19Course)
DisjointClasses(:Subj14Course :Subj1Course)
DisjointClasses(:Subj14Course :Subj20Course)
DisjointClasses(:Subj14Course :Subj2Course)
DisjointClasses(:Subj14Course :Subj3Course)
DisjointClasses(:Subj14Course :Subj4Course)
DisjointClasses(:Subj14Course :Subj5Course)
DisjointClasses(:Subj14Course :Subj6Course)
DisjointClasses(:Subj14Course :Subj7Course)
DisjointClasses(:Subj14Course :Subj8Course)
DisjointClasses(:Subj14Course :Subj9Course)
Declaration(Class(:Subj14Department))
SubClassOf(:Subj14Department :Department)
DisjointClasses(:Subj14Department :Subj10Department)
DisjointClasses(:Subj14Department :Subj11Department)
DisjointClasses(:Subj14Department :Subj12Department)
DisjointClasses(:Subj14Department :Subj13Department)
DisjointClasses(:Subj14Department :Subj15Department)
DisjointClasses(:Subj14Department :Subj16Department)
DisjointClasses(:Subj14Department :Subj17Department)
DisjointClasses(:Subj14Department :Subj18Department)
DisjointClasses(:Subj14Department :Subj19Department)
DisjointClasses(:Subj14Department :Subj1Department)
DisjointClasses(:Subj14Department :Subj20Department)
DisjointClasses(:Subj14Department :Subj2Department)
DisjointClasses(:Subj14Department :Subj3Department)
DisjointClasses(:Subj14Department :Subj4Department)
DisjointClasses(:Subj14Department :Subj5Department)
DisjointClasses(:Subj14Department :Subj6Department)
DisjointClasses(:Subj14Department :Subj7Department)
DisjointClasses(:Subj14Department :Subj8Department)
DisjointClasses(:Subj14Department :Subj9Department)
Declaration(Class(:Subj14Professor))
SubClassOf(:Subj14Professor :Professor)
DisjointClasses(:Subj14Professor :Subj10Professor)
DisjointClasses(:Subj14Professor :Subj11Professor)
DisjointClasses(:Subj14Professor :Subj12Professor)
DisjointClasses(:Subj14Professor :Subj13Professor)
DisjointClasses(:Subj14Professor :Subj15Professor)
DisjointClasses(:Subj14Professor :Subj16Professor)
DisjointClasses(:Subj14Professor :Subj17Professor)
DisjointClasses(:Subj14Professor :Subj18Professor)
DisjointClasses(:Subj14Professor :Subj19Professor)
DisjointClasses(:Subj14Professor :Subj1Professor)
DisjointClasses(:Subj14Professor :Subj20Professor)
DisjointClasses(:Subj14Professor :Subj2Professor)
DisjointClasses(:Subj14Professor :Subj3Professor)
DisjointClasses(:Subj14Professor :Subj4Professor)
DisjointClasses(:Subj14Professor :Subj5Professor)
DisjointClasses(:Subj14Professor :Subj6Professor)
DisjointClasses(:Subj14Professor :Subj7Professor)
DisjointClasses(:Subj14Professor :Subj8Professor)
DisjointClasses(:Subj14Professor :Subj9Professor)
Declaration(Class(:Subj14Student))
SubClassOf(:Subj14Student :Student)
Declaration(Class(:Subj15Course))
SubClassOf(:Subj15Course :Course)
DisjointClasses(:Subj15Course :Subj10Course)
DisjointClasses(:Subj15Course :Subj11Course)
DisjointClasses(:Subj15Course :Subj12Course)
DisjointClasses(:Subj15Course :Subj13Course)
DisjointClasses(:Subj15Course :Subj14Course)
DisjointClasses(:Subj15Course :Subj16Course)
DisjointClasses(:Subj15Course :Subj17Course)
DisjointClasses(:Subj15Course :Subj18Course)
DisjointClasses(:Subj15Course :Subj19Course)
DisjointClasses(:Subj15Course :Subj1Course)
DisjointClasses(:Subj15Course :Subj20Course)
DisjointClasses(:Subj15Course :Subj2Course)
DisjointClasses(:Subj15Course :Subj3Course)
DisjointClasses(:Subj15Course :Subj4Course)
DisjointClasses(:Subj15Course :Subj5Course)
DisjointClasses(:Subj15Course :Subj6Course)
DisjointClasses(:Subj15Course :Subj7Course)
DisjointClasses(:Subj15Course :Subj8Course)
DisjointClasses(:Subj15Course :Subj9Course)
Declaration(Class(:Subj15Department))
SubClassOf(:Subj15Department :Department)
DisjointClasses(:Subj15Department :Subj10Department)
DisjointClasses(:Subj15Department :Subj11Department)
DisjointClasses(:Subj15Department :Subj12Department)
DisjointClasses(:Subj15Department :Subj13Department)
DisjointClasses(:Subj15Department :Subj14Department)
DisjointClasses(:Subj15Department :Subj16Department)
DisjointClasses(:Subj15Department :Subj17Department)
DisjointClasses(:Subj15Department :Subj18Department)
DisjointClasses(:Subj15Department :Subj19Department)
DisjointClasses(:Subj15Department :Subj1Department)
DisjointClasses(:Subj15Department :Subj20Department)
DisjointClasses(:Subj15Department :Subj2Department)
DisjointClasses(:Subj15Department :Subj3Department)
DisjointClasses(:Subj15Department :Subj4Department)
DisjointClasses(:Subj15Department :Subj5Department)
DisjointClasses(:Subj15Department :Subj6Department)
DisjointClasses(:Subj15Department :Subj7Department)
DisjointClasses(:Subj15Department :Subj8Department)
DisjointClasses(:Subj15Department :Subj9Department)
Declaration(Class(:Subj15Professor))
SubClassOf(:Subj15Professor :Professor)
DisjointClasses(:Subj15Professor :Subj10Professor)
DisjointClasses(:Subj15Professor :Subj11Professor)
DisjointClasses(:Subj15Professor :Subj12Professor)
DisjointClasses(:Subj15Professor :Subj13Professor)
DisjointClasses(:Subj15Professor :Subj14Professor)
DisjointClasses(:Subj15Professor :Subj16Professor)
DisjointClasses(:Subj15Professor :Subj17Professor)
DisjointClasses(:Subj15Professor :Subj18Professor)
DisjointClasses(:Subj15Professor :Subj19Professor)
DisjointClasses(:Subj15Professor :Subj1Professor)
DisjointClasses(:Subj15Professor :Subj20Professor)
DisjointClasses(:Subj15Professor :Subj2Professor)
DisjointClasses(:Subj15Professor :Subj3Professor)
DisjointClasses(:Subj15Professor :Subj4Professor)
DisjointClasses(:Subj15Professor :Subj5Professor)
DisjointClasses(:Subj15Professor :Subj6Professor)
DisjointClasses(:Subj15Professor :Subj7Professor)
DisjointClasses(:Subj15Professor :Subj8Professor)
DisjointClasses(:Subj15Professor :Subj9Professor)
Declaration(Class(:Subj15Student))
SubClassOf(:Subj15Student :Student)
Declaration(Class(:Subj16Course))
SubClassOf(:Subj16Course :Course)
DisjointClasses(:Subj16Course :Subj10Course)
DisjointClasses(:Subj16Course :Subj11Course)
DisjointClasses(:Subj16Course :Subj12Course)
DisjointClasses(:Subj16Course :Subj13Course)
DisjointClasses(:Subj16Course :Subj14Course)
DisjointClasses(:Subj16Course :Subj15Course)
DisjointClasses(:Subj16Course :Subj17Course)
DisjointClasses(:Subj16Course :Subj18Course)
DisjointClasses(:Subj16Course :Subj19Course)
DisjointClasses(:Subj16Course :Subj1Course)
DisjointClasses(:Subj16Course :Subj20Course)
DisjointClasses(:Subj16Course :Subj2Course)
DisjointClasses(:Subj16Course :Subj3Course)
DisjointClasses(:Subj16Course :Subj4Course)
DisjointClasses(:Subj16Course :Subj5Course)
DisjointClasses(:Subj16Course :Subj6Course)
DisjointClasses(:Subj16Course :Subj7Course)
DisjointClasses(:Subj16Course :Subj8Course)
DisjointClasses(:Subj16Course :Subj9Course)
Declaration(Class(:Subj16Department))
SubClassOf(:Subj16Department :Department)
DisjointClasses(:Subj16Department :Subj10Department)
DisjointClasses(:Subj16Department :Subj11Department)
DisjointClasses(:Subj16Department :Subj12Department)
DisjointClasses(:Subj16Department :Subj13Department)
DisjointClasses(:Subj16Department :Subj14Department)
DisjointClasses(:Subj16Department :Subj15Department)
DisjointClasses(:Subj16Department :Subj17Department)
DisjointClasses(:Subj16Department :Subj18Department)
DisjointClasses(:Subj16Department :Subj19Department)
DisjointClasses(:Subj16Department :Subj1Department)
DisjointClasses(:Subj16Department :Subj20Department)
DisjointClasses(:Subj16Department :Subj2Department)
DisjointClasses(:Subj16Department :Subj3Department)
DisjointClasses(:Subj16Department :Subj4Department)
DisjointClasses(:Subj16Department :Subj5Department)
DisjointClasses(:Subj16Department :Subj6Department)
DisjointClasses(:Subj16Department :Subj7Department)
DisjointClasses(:Subj16Department :Subj8Department)
DisjointClasses(:Subj16Department :Subj9Department)
Declaration(Class(:Subj16Professor))
SubClassOf(:Subj16Professor :Professor)
DisjointClasses(:Subj16Professor :Subj10Professor)
DisjointClasses(:Subj16Professor :Subj11Professor)
DisjointClasses(:Subj16Professor :Subj12Professor)
DisjointClasses(:Subj16Professor :Subj13Professor)
DisjointClasses(:Subj16Professor :Subj14Professor)
DisjointClasses(:Subj16Professor :Subj15Professor)
DisjointClasses(:Subj16Professor :Subj17Professor)
DisjointClasses(:Subj16Professor :Subj18Professor)
DisjointClasses(:Subj16Professor :Subj19Professor)
DisjointClasses(:Subj16Professor :Subj1Professor)
DisjointClasses(:Subj16Professor :Subj20Professor)
DisjointClasses(:Subj16Professor :Subj2Professor)
DisjointClasses(:Subj16Professor :Subj3Professor)
DisjointClasses(:Subj16Professor :Subj4Professor)
DisjointClasses(:Subj16Professor :Subj5Professor)
DisjointClasses(:Subj16Professor :Subj6Professor)
DisjointClasses(:Subj16Professor :Subj7Professor)
DisjointClasses(:Subj16Professor :Subj8Professor)
DisjointClasses(:Subj16Professor :Subj9Professor)
Declaration(Class(:Subj16Student))
SubClassOf(:Subj16Student :Student)
Declaration(Class(:Subj17Course))
SubClassOf(:Subj17Course :Course)
DisjointClasses(:Subj17Course :Subj10Course)
DisjointClasses(:Subj17Course :Subj11Course)
DisjointClasses(:Subj17Course :Subj12Course)
DisjointClasses(:Subj17Course :Subj13Course)
DisjointClasses(:Subj17Course :Subj14Course)
DisjointClasses(:Subj17Course :Subj15Course)
DisjointClasses(:Subj17Course :Subj16Course)
DisjointClasses(:Subj17Course :Subj18Course)
DisjointClasses(:Subj17Course :Subj19Course)
DisjointClasses(:Subj17Course :Subj1Course)
DisjointClasses(:Subj17Course :Subj20Course)
DisjointClasses(:Subj17Course :Subj2Course)
DisjointClasses(:Subj17Course :Subj3Course)
DisjointClasses(:Subj17Course :Subj4Course)
DisjointClasses(:Subj17Course :Subj5Course)
DisjointClasses(:Subj17Course :Subj6Course)
DisjointClasses(:Subj17Course :Subj7Course)
DisjointClasses(:Subj17Course :Subj8Course)
DisjointClasses(:Subj17Course :Subj9Course)
Declaration(Class(:Subj17Department))
SubClassOf(:Subj17Department :Department)
DisjointClasses(:Subj17Department :Subj10Department)
DisjointClasses(:Subj17Department :Subj11Department)
DisjointClasses(:Subj17Department :Subj12Department)
DisjointClasses(:Subj17Department :Subj13Department)
DisjointClasses(:Subj17Department :Subj14Department)
DisjointClasses(:Subj17Department :Subj15Department)
DisjointClasses(:Subj17Department :Subj16Department)
DisjointClasses(:Subj17Department :Subj18Department)
DisjointClasses(:Subj17Department :Subj19Department)
DisjointClasses(:Subj17Department :Subj1Department)
DisjointClasses(:Subj17Department :Subj20Department)
DisjointClasses(:Subj17Department :Subj2Department)
DisjointClasses(:Subj17Department :Subj3Department)
DisjointClasses(:Subj17Department :Subj4Department)
DisjointClasses(:Subj17Department :Subj5Department)
DisjointClasses(:Subj17Department :Subj6Department)
DisjointClasses(:Subj17Department :Subj7Department)
DisjointClasses(:Subj17Department :Subj8Department)
DisjointClasses(:Subj17Department :Subj9Department)
Declaration(Class(:Subj17Professor))
SubClassOf(:Subj17Professor :Professor)
DisjointClasses(:Subj17Professor :Subj10Professor)
DisjointClasses(:Subj17Professor :Subj11Professor)
DisjointClasses(:Subj17Professor :Subj12Professor)
DisjointClasses(:Subj17Professor :Subj13Professor)
DisjointClasses(:Subj17Professor :Subj14Professor)
DisjointClasses(:Subj17Professor :Subj15Professor)
DisjointClasses(:Subj17Professor :Subj16Professor)
DisjointClasses(:Subj17Professor :Subj18Professor)
DisjointClasses(:Subj17Professor :Subj19Professor)
DisjointClasses(:Subj17Professor :Subj1Professor)
DisjointClasses(:Subj17Professor :Subj20Professor)
DisjointClasses(:Subj17Professor :Subj2Professor)
DisjointClasses(:Subj17Professor :Subj3Professor)
DisjointClasses(:Subj17Professor :Subj4Professor)
DisjointClasses(:Subj17Professor :Subj5Professor)
DisjointClasses(:Subj17Professor :Subj6Professor)
DisjointClasses(:Subj17Professor :Subj7Professor)
DisjointClasses(:Subj17Professor :Subj8Professor)
DisjointClasses(:Subj17Professor :Subj9Professor)
Declaration(Class(:Subj17Student))
SubClassOf(:Subj17Student :Student)
Declaration(Class(:Subj18Course))
SubClassOf(:Subj18Course :Course)
DisjointClasses(:Subj18Course :Subj10Course)
DisjointClasses(:Subj18Course :Subj11Course)
DisjointClasses(:Subj18Course :Subj12Course)
DisjointClasses(:Subj18Course :Subj13Course)
DisjointClasses(:Subj18Course :Subj14Course)
DisjointClasses(:Subj18Course :Subj15Course)
DisjointClasses(:Subj18Course :Subj16Course)
DisjointClasses(:Subj18Course :Subj17Course)
DisjointClasses(:Subj18Course :Subj19Course)
DisjointClasses(:Subj18Course :Subj1Course)
DisjointClasses(:Subj18Course :Subj20Course)
DisjointClasses(:Subj18Course :Subj2Course)
DisjointClasses(:Subj18Course :Subj3Course)
DisjointClasses(:Subj18Course :Subj4Course)
DisjointClasses(:Subj18Course :Subj5Course)
DisjointClasses(:Subj18Course :Subj6Course)
DisjointClasses(:Subj18Course :Subj7Course)
DisjointClasses(:Subj18Course :Subj8Course)
DisjointClasses(:Subj18Course :Subj9Course)
Declaration(Class(:Subj18Department))
SubClassOf(:Subj18Department :Department)
DisjointClasses(:Subj18Department :Subj10Department)
DisjointClasses(:Subj18Department :Subj11Department)
DisjointClasses(:Subj18Department :Subj12Department)
DisjointClasses(:Subj18Department :Subj13Department)
DisjointClasses(:Subj18Department :Subj14Department)
DisjointClasses(:Subj18Department :Subj15Department)
DisjointClasses(:Subj18Department :Subj16Department)
DisjointClasses(:Subj18Department :Subj17Department)
DisjointClasses(:Subj18Department :Subj19Department)
DisjointClasses(:Subj18Department :Subj1Department)
DisjointClasses(:Subj18Department :Subj20Department)
DisjointClasses(:Subj18Department :Subj2Department)
DisjointClasses(:Subj18Department :Subj3Department)
DisjointClasses(:Subj18Department :Subj4Department)
DisjointClasses(:Subj18Department :Subj5Department)
DisjointClasses(:Subj18Department :Subj6Department)
DisjointClasses(:Subj18Department :Subj7Department)
DisjointClasses(:Subj18Department :Subj8Department)
DisjointClasses(:Subj18Department :Subj9Department)
Declaration(Class(:Subj18Professor))
SubClassOf(:Subj18Professor :Professor)
DisjointClasses(:Subj18Professor :Subj10Professor)
DisjointClasses(:Subj18Professor :Subj11Professor)
DisjointClasses(:Subj18Professor :Subj12Professor)
DisjointClasses(:Subj18Professor :Subj13Professor)
DisjointClasses(:Subj18Professor :Subj14Professor)
DisjointClasses(:Subj18Professor :Subj15Professor)
DisjointClasses(:Subj18Professor :Subj16Professor)
DisjointClasses(:Subj18Professor :Subj17Professor)
DisjointClasses(:Subj18Professor :Subj19Professor)
DisjointClasses(:Subj18Professor :Subj1Professor)
DisjointClasses(:Subj18Professor :Subj20Professor)
DisjointClasses(:Subj18Professor :Subj2Professor)
DisjointClasses(:Subj18Professor :Subj3Professor)
DisjointClasses(:Subj18Professor :Subj4Professor)
DisjointClasses(:Subj18Professor :Subj5Professor)
DisjointClasses(:Subj18Professor :Subj6Professor)
DisjointClasses(:Subj18Professor :Subj7Professor)
DisjointClasses(:Subj18Professor :Subj8Professor)
DisjointClasses(:Subj18Professor :Subj9Professor)
Declaration(Class(:Subj18Student))
SubClassOf(:Subj18Student :Student)
Declaration(Class(:Subj19Course))
SubClassOf(:Subj19Course :Course)
DisjointClasses(:Subj19Course :Subj10Course)
DisjointClasses(:Subj19Course :Subj11Course)
DisjointClasses(:Subj19Course :Subj12Course)
DisjointClasses(:Subj19Course :Subj13Course)
DisjointClasses(:Subj19Course :Subj14Course)
DisjointClasses(:Subj19Course :Subj15Course)
DisjointClasses(:Subj19Course :Subj16Course)
DisjointClasses(:Subj19Course :Subj17Course)
DisjointClasses(:Subj19Course :Subj18Course)
DisjointClasses(:Subj19Course :Subj1Course)
DisjointClasses(:Subj19Course :Subj20Course)
DisjointClasses(:Subj19Course :Subj2Course)
DisjointClasses(:Subj19Course :Subj3Course)
DisjointClasses(:Subj19Course :Subj4Course)
DisjointClasses(:Subj19Course :Subj5Course)
DisjointClasses(:Subj19Course :Subj6Course)
DisjointClasses(:Subj19Course :Subj7Course)
DisjointClasses(:Subj19Course :Subj8Course)
DisjointClasses(:Subj19Course :Subj9Course)
Declaration(Class(:Subj19Department))
SubClassOf(:Subj19Department :Department)
DisjointClasses(:Subj19Department :Subj10Department)
DisjointClasses(:Subj19Department :Subj11Department)
DisjointClasses(:Subj19Department :Subj12Department)
DisjointClasses(:Subj19Department :Subj13Department)
DisjointClasses(:Subj19Department :Subj14Department)
DisjointClasses(:Subj19Department :Subj15Department)
DisjointClasses(:Subj19Department :Subj16Department)
DisjointClasses(:Subj19Department :Subj17Department)
DisjointClasses(:Subj19Department :Subj18Department)
DisjointClasses(:Subj19Department :Subj1Department)
DisjointClasses(:Subj19Department :Subj20Department)
DisjointClasses(:Subj19Department :Subj2Department)
DisjointClasses(:Subj19Department :Subj3Department)
DisjointClasses(:Subj19Department :Subj4Department)
DisjointClasses(:Subj19Department :Subj5Department)
DisjointClasses(:Subj19Department :Subj6Department)
DisjointClasses(:Subj19Department :Subj7Department)
DisjointClasses(:Subj19Department :Subj8Department)
DisjointClasses(:Subj19Department :Subj9Department)
Declaration(Class(:Subj19Professor))
SubClassOf(:Subj19Professor :Professor)
DisjointClasses(:Subj19Professor :Subj10Professor)
DisjointClasses(:Subj19Professor :Subj11Professor)
DisjointClasses(:Subj19Professor :Subj12Professor)
DisjointClasses(:Subj19Professor :Subj13Professor)
DisjointClasses(:Subj19Professor :Subj14Professor)
DisjointClasses(:Subj19Professor :Subj15Professor)
DisjointClasses(:Subj19Professor :Subj16Professor)
DisjointClasses(:Subj19Professor :Subj17Professor)
DisjointClasses(:Subj19Professor :Subj18Professor)
DisjointClasses(:Subj19Professor :Subj1Professor)
DisjointClasses(:Subj19Professor :Subj20Professor)
DisjointClasses(:Subj19Professor :Subj2Professor)
DisjointClasses(:Subj19Professor :Subj3Professor)
DisjointClasses(:Subj19Professor :Subj4Professor)
DisjointClasses(:Subj19Professor :Subj5Professor)
DisjointClasses(:Subj19Professor :Subj6Professor)
DisjointClasses(:Subj19Professor :Subj7Professor)
DisjointClasses(:Subj19Professor :Subj8Professor)
DisjointClasses(:Subj19Professor :Subj9Professor)
Declaration(Class(:Subj19Student))
SubClassOf(:Subj19Student :Student)
Declaration(Class(:Subj1Course))
SubClassOf(:Subj1Course :Course)
DisjointClasses(:Subj1Course :Subj10Course)
DisjointClasses(:Subj1Course :Subj11Course)
DisjointClasses(:Subj1Course :Subj12Course)
DisjointClasses(:Subj1Course :Subj13Course)
DisjointClasses(:Subj1Course :Subj14Course)
DisjointClasses(:Subj1Course :Subj15Course)
DisjointClasses(:Subj1Course :Subj16Course)
DisjointClasses(:Subj1Course :Subj17Course)
DisjointClasses(:Subj1Course :Subj18Course)
DisjointClasses(:Subj1Course :Subj19Course)
DisjointClasses(:Subj1Course :Subj20Course)
DisjointClasses(:Subj1Course :Subj2Course)
DisjointClasses(:Subj1Course :Subj3Course)
DisjointClasses(:Subj1Course :Subj4Course)
DisjointClasses(:Subj1Course :Subj5Course)
DisjointClasses(:Subj1Course :Subj6Course)
DisjointClasses(:Subj1Course :Subj7Course)
DisjointClasses(:Subj1Course :Subj8Course)
DisjointClasses(:Subj1Course :Subj9Course)
Declaration(Class(:Subj1Department))
SubClassOf(:Subj1Department :Department)
DisjointClasses(:Subj1Department :Subj10Department)
DisjointClasses(:Subj1Department :Subj11Department)
DisjointClasses(:Subj1Department :Subj12Department)
DisjointClasses(:Subj1Department :Subj13Department)
DisjointClasses(:Subj1Department :Subj14Department)
DisjointClasses(:Subj1Department :Subj15Department)
DisjointClasses(:Subj1Department :Subj16Department)
DisjointClasses(:Subj1Department :Subj17Department)
DisjointClasses(:Subj1Department :Subj18Department)
DisjointClasses(:Subj1Department :Subj19Department)
DisjointClasses(:Subj1Department :Subj20Department)
DisjointClasses(:Subj1Department :Subj2Department)
DisjointClasses(:Subj1Department :Subj3Department)
DisjointClasses(:Subj1Department :Subj4Department)
DisjointClasses(:Subj1Department :Subj5Department)
DisjointClasses(:Subj1Department :Subj6Department)
DisjointClasses(:Subj1Department :Subj7Department)
DisjointClasses(:Subj1Department :Subj8Department)
DisjointClasses(:Subj1Department :Subj9Department)
Declaration(Class(:Subj1Professor))
SubClassOf(:Subj1Professor :Professor)
DisjointClasses(:Subj1Professor :Subj10Professor)
DisjointClasses(:Subj1Professor :Subj11Professor)
DisjointClasses(:Subj1Professor :Subj12Professor)
DisjointClasses(:Subj1Professor :Subj13Professor)
DisjointClasses(:Subj1Professor :Subj14Professor)
DisjointClasses(:Subj1Professor :Subj15Professor)
DisjointClasses(:Subj1Professor :Subj16Professor)
DisjointClasses(:Subj1Professor :Subj17Professor)
DisjointClasses(:Subj1Professor :Subj18Professor)
DisjointClasses(:Subj1Professor :Subj19Professor)
DisjointClasses(:Subj1Professor :Subj20Professor)
DisjointClasses(:Subj1Professor :Subj2Professor)
DisjointClasses(:Subj1Professor :Subj3Professor)
DisjointClasses(:Subj1Professor :Subj4Professor)
DisjointClasses(:Subj1Professor :Subj5Professor)
DisjointClasses(:Subj1Professor :Subj6Professor)
DisjointClasses(:Subj1Professor :Subj7Professor)
DisjointClasses(:Subj1Professor :Subj8Professor)
DisjointClasses(:Subj1Professor :Subj9Professor)
Declaration(Class(:Subj1Student))
SubClassOf(:Subj1Student :Student)
Declaration(Class(:Subj20Course))
SubClassOf(:Subj20Course :Course)
DisjointClasses(:Subj20Course :Subj10Course)
DisjointClasses(:Subj20Course :Subj11Course)
DisjointClasses(:Subj20Course :Subj12Course)
DisjointClasses(:Subj20Course :Subj13Course)
DisjointClasses(:Subj20Course :Subj14Course)
DisjointClasses(:Subj20Course :Subj15Course)
DisjointClasses(:Subj20Course :Subj16Course)
DisjointClasses(:Subj20Course :Subj17Course)
DisjointClasses(:Subj20Course :Subj18Course)
DisjointClasses(:Subj20Course :Subj19Course)
DisjointClasses(:Subj20Course :Subj1Course)
DisjointClasses(:Subj20Course :Subj2Course)
DisjointClasses(:Subj20Course :Subj3Course)
DisjointClasses(:Subj20Course :Subj4Course)
DisjointClasses(:Subj20Course :Subj5Course)
DisjointClasses(:Subj20Course :Subj6Course)
DisjointClasses(:Subj20Course :Subj7Course)
DisjointClasses(:Subj20Course :Subj8Course)
DisjointClasses(:Subj20Course :Subj9Course)
Declaration(Class(:Subj20Department))
SubClassOf(:Subj20Department :Department)
DisjointClasses(:Subj20Department :Subj10Department)
DisjointClasses(:Subj20Department :Subj11Department)
DisjointClasses(:Subj20Department :Subj12Department)
DisjointClasses(:Subj20Department :Subj13Department)
DisjointClasses(:Subj20Department :Subj14Department)
DisjointClasses(:Subj20Department :Subj15Department)
DisjointClasses(:Subj20Department :Subj16Department)
DisjointClasses(:Subj20Department :Subj17Department)
DisjointClasses(:Subj20Department :Subj18Department)
DisjointClasses(:Subj20Department :Subj19Department)
DisjointClasses(:Subj20Department :Subj1Department)
DisjointClasses(:Subj20Department :Subj2Department)
DisjointClasses(:Subj20Department :Subj3Department)
DisjointClasses(:Subj20Department :Subj4Department)
DisjointClasses(:Subj20Department :Subj5Department)
DisjointClasses(:Subj20Department :Subj6Department)
DisjointClasses(:Subj20Department :Subj7Department)
DisjointClasses(:Subj20Department :Subj8Department)
DisjointClasses(:Subj20Department :Subj9Department)
Declaration(Class(:Subj20Professor))
SubClassOf(:Subj20Professor :Professor)
DisjointClasses(:Subj20Professor :Subj10Professor)
DisjointClasses(:Subj20Professor :Subj11Professor)
DisjointClasses(:Subj20Professor :Subj12Professor)
DisjointClasses(:Subj20Professor :Subj13Professor)
DisjointClasses(:Subj20Professor :Subj14Professor)
DisjointClasses(:Subj20Professor :Subj15Professor)
DisjointClasses(:Subj20Professor :Subj16Professor)
DisjointClasses(:Subj20Professor :Subj17Professor)
DisjointClasses(:Subj20Professor :Subj18Professor)
DisjointClasses(:Subj20Professor :Subj19Professor)
DisjointClasses(:Subj20Professor :Subj1Professor)
DisjointClasses(:Subj20Professor :Subj2Professor)
DisjointClasses(:Subj20Professor :Subj3Professor)
DisjointClasses(:Subj20Professor :Subj4Professor)
DisjointClasses(:Subj20Professor :Subj5Professor)
DisjointClasses(:Subj20Professor :Subj6Professor)
DisjointClasses(:Subj20Professor :Subj7Professor)
DisjointClasses(:Subj20Professor :Subj8Professor)
DisjointClasses(:Subj20Professor :Subj9Professor)
Declaration(Class(:Subj20Student))
SubClassOf(:Subj20Student :Student)
Declaration(Class(:Subj2Course))
SubClassOf(:Subj2Course :Course)
DisjointClasses(:Subj2Course :Subj10Course)
DisjointClasses(:Subj2Course :Subj11Course)
DisjointClasses(:Subj2Course :Subj12Course)
DisjointClasses(:Subj2Course :Subj13Course)
DisjointClasses(:Subj2Course :Subj14Course)
DisjointClasses(:Subj2Course :Subj15Course)
DisjointClasses(:Subj2Course :Subj16Course)
DisjointClasses(:Subj2Course :Subj17Course)
DisjointClasses(:Subj2Course :Subj18Course)
DisjointClasses(:Subj2Course :Subj19Course)
DisjointClasses(:Subj2Course :Subj1Course)
DisjointClasses(:Subj2Course :Subj20Course)
DisjointClasses(:Subj2Course :Subj3Course)
DisjointClasses(:Subj2Course :Subj4Course)
DisjointClasses(:Subj2Course :Subj5Course)
DisjointClasses(:Subj2Course :Subj6Course)
DisjointClasses(:Subj2Course :Subj7Course)
DisjointClasses(:Subj2Course :Subj8Course)
DisjointClasses(:Subj2Course :Subj9Course)
Declaration(Class(:Subj2Department))
SubClassOf(:Subj2Department :Department)
DisjointClasses(:Subj2Department :Subj10Department)
DisjointClasses(:Subj2Department :Subj11Department)
DisjointClasses(:Subj2Department :Subj12Department)
DisjointClasses(:Subj2Department :Subj13Department)
DisjointClasses(:Subj2Department :Subj14Department)
DisjointClasses(:Subj2Department :Subj15Department)
DisjointClasses(:Subj2Department :Subj16Department)
DisjointClasses(:Subj2Department :Subj17Department)
DisjointClasses(:Subj2Department :Subj18Department)
DisjointClasses(:Subj2Department :Subj19Department)
DisjointClasses(:Subj2Department :Subj1Department)
DisjointClasses(:Subj2Department :Subj20Department)
DisjointClasses(:Subj2Department :Subj3Department)
DisjointClasses(:Subj2Department :Subj4Department)
DisjointClasses(:Subj2Department :Subj5Department)
DisjointClasses(:Subj2Department :Subj6Department)
DisjointClasses(:Subj2Department :Subj7Department)
DisjointClasses(:Subj2Department :Subj8Department)
DisjointClasses(:Subj2Department :Subj9Department)
Declaration(Class(:Subj2Professor))
SubClassOf(:Subj2Professor :Professor)
DisjointClasses(:Subj2Professor :Subj10Professor)
DisjointClasses(:Subj2Professor :Subj11Professor)
DisjointClasses(:Subj2Professor :Subj12Professor)
DisjointClasses(:Subj2Professor :Subj13Professor)
DisjointClasses(:Subj2Professor :Subj14Professor)
DisjointClasses(:Subj2Professor :Subj15Professor)
DisjointClasses(:Subj2Professor :Subj16Professor)
DisjointClasses(:Subj2Professor :Subj17Professor)
DisjointClasses(:Subj2Professor :Subj18Professor)
DisjointClasses(:Subj2Professor :Subj19Professor)
DisjointClasses(:Subj2Professor :Subj1Professor)
DisjointClasses(:Subj2Professor :Subj20Professor)
DisjointClasses(:Subj2Professor :Subj3Professor)
DisjointClasses(:Subj2Professor :Subj4Professor)
DisjointClasses(:Subj2Professor :Subj5Professor)
DisjointClasses(:Subj2Professor :Subj6Professor)
DisjointClasses(:Subj2Professor :Subj7Professor)
DisjointClasses(:Subj2Professor :Subj8Professor)
DisjointClasses(:Subj2Professor :Subj9Professor)
Declaration(Class(:Subj2Student))
SubClassOf(:Subj2Student :Student)
Declaration(Class(:Subj3Course))
SubClassOf(:Subj3Course :Course)
DisjointClasses(:Subj3Course :Subj10Course)
DisjointClasses(:Subj3Course :Subj11Course)
DisjointClasses(:Subj3Course :Subj12Course)
DisjointClasses(:Subj3Course :Subj13Course)
DisjointClasses(:Subj3Course :Subj14Course)
DisjointClasses(:Subj3Course :Subj15Course)
DisjointClasses(:Subj3Course :Subj16Course)
DisjointClasses(:Subj3Course :Subj17Course)
DisjointClasses(:Subj3Course :Subj18Course)
DisjointClasses(:Subj3Course :Subj19Course)
DisjointClasses(:Subj3Course :Subj1Course)
DisjointClasses(:Subj3Course :Subj20Course)
DisjointClasses(:Subj3Course :Subj2Course)
DisjointClasses(:Subj3Course :Subj4Course)
DisjointClasses(:Subj3Course :Subj5Course)
DisjointClasses(:Subj3Course :Subj6Course)
DisjointClasses(:Subj3Course :Subj7Course)
DisjointClasses(:Subj3Course :Subj8Course)
DisjointClasses(:Subj3Course :Subj9Course)
Declaration(Class(:Subj3Department))
SubClassOf(:Subj3Department :Department)
DisjointClasses(:Subj3Department :Subj10Department)
DisjointClasses(:Subj3Department :Subj11Department)
DisjointClasses(:Subj3Department :Subj12Department)
DisjointClasses(:Subj3Department :Subj13Department)
DisjointClasses(:Subj3Department :Subj14Department)
DisjointClasses(:Subj3Department :Subj15Department)
DisjointClasses(:Subj3Department :Subj16Department)
DisjointClasses(:Subj3Department :Subj17Department)
DisjointClasses(:Subj3Department :Subj18Department)
DisjointClasses(:Subj3Department :Subj19Department)
DisjointClasses(:Subj3Department :Subj1Department)
DisjointClasses(:Subj3Department :Subj20Department)
DisjointClasses(:Subj3Department :Subj2Department)
DisjointClasses(:Subj3Department :Subj4Department)
DisjointClasses(:Subj3Department :Subj5Department)
DisjointClasses(:Subj3Department :Subj6Department)
DisjointClasses(:Subj3Department :Subj7Department)
DisjointClasses(:Subj3Department :Subj8Department)
DisjointClasses(:Subj3Department :Subj9Department)
Declaration(Class(:Subj3Professor))
SubClassOf(:Subj3Professor :Professor)
DisjointClasses(:Subj3Professor :Subj10Professor)
DisjointClasses(:Subj3Professor :Subj11Professor)
DisjointClasses(:Subj3Professor :Subj12Professor)
DisjointClasses(:Subj3Professor :Subj13Professor)
DisjointClasses(:Subj3Professor :Subj14Professor)
DisjointClasses(:Subj3Professor :Subj15Professor)
DisjointClasses(:Subj3Professor :Subj16Professor)
DisjointClasses(:Subj3Professor :Subj17Professor)
DisjointClasses(:Subj3Professor :Subj18Professor)
DisjointClasses(:Subj3Professor :Subj19Professor)
DisjointClasses(:Subj3Professor :Subj1Professor)
DisjointClasses(:Subj3Professor :Subj20Professor)
DisjointClasses(:Subj3Professor :Subj2Professor)
DisjointClasses(:Subj3Professor :Subj4Professor)
DisjointClasses(:Subj3Professor :Subj5Professor)
DisjointClasses(:Subj3Professor :Subj6Professor)
DisjointClasses(:Subj3Professor :Subj7Professor)
DisjointClasses(:Subj3Professor :Subj8Professor)
DisjointClasses(:Subj3Professor :Subj9Professor)
Declaration(Class(:Subj3Student))
SubClassOf(:Subj3Student :Student)
Declaration(Class(:Subj4Course))
SubClassOf(:Subj4Course :Course)
DisjointClasses(:Subj4Course :Subj10Course)
DisjointClasses(:Subj4Course :Subj11Course)
DisjointClasses(:Subj4Course :Subj12Course)
DisjointClasses(:Subj4Course :Subj13Course)
DisjointClasses(:Subj4Course :Subj14Course)
DisjointClasses(:Subj4Course :Subj15Course)
DisjointClasses(:Subj4Course :Subj16Course)
DisjointClasses(:Subj4Course :Subj17Course)
DisjointClasses(:Subj4Course :Subj18Course)
DisjointClasses(:Subj4Course :Subj19Course)
DisjointClasses(:Subj4Course :Subj1Course)
DisjointClasses(:Subj4Course :Subj20Course)
DisjointClasses(:Subj4Course :Subj2Course)
DisjointClasses(:Subj4Course :Subj3Course)
DisjointClasses(:Subj4Course :Subj5Course)
DisjointClasses(:Subj4Course :Subj6Course)
DisjointClasses(:Subj4Course :Subj7Course)
DisjointClasses(:Subj4Course :Subj8Course)
DisjointClasses(:Subj4Course :Subj9Course)
Declaration(Class(:Subj4Department))
SubClassOf(:Subj4Department :Department)
DisjointClasses(:Subj4Department :Subj10Department)
DisjointClasses(:Subj4Department :Subj11Department)
DisjointClasses(:Subj4Department :Subj12Department)
DisjointClasses(:Subj4Department :Subj13Department)
DisjointClasses(:Subj4Department :Subj14Department)
DisjointClasses(:Subj4Department :Subj15Department)
DisjointClasses(:Subj4Department :Subj16Department)
DisjointClasses(:Subj4Department :Subj17Department)
DisjointClasses(:Subj4Department :Subj18Department)
DisjointClasses(:Subj4Department :Subj19Department)
DisjointClasses(:Subj4Department :Subj1Department)
DisjointClasses(:Subj4Department :Subj20Department)
DisjointClasses(:Subj4Department :Subj2Department)
DisjointClasses(:Subj4Department :Subj3Department)
DisjointClasses(:Subj4Department :Subj5Department)
DisjointClasses(:Subj4Department :Subj6Department)
DisjointClasses(:Subj4Department :Subj7Department)
DisjointClasses(:Subj4Department :Subj8Department)
DisjointClasses(:Subj4Department :Subj9Department)
Declaration(Class(:Subj4Professor))
SubClassOf(:Subj4Professor :Professor)
DisjointClasses(:Subj4Professor :Subj10Professor)
DisjointClasses(:Subj4Professor :Subj11Professor)
DisjointClasses(:Subj4Professor :Subj12Professor)
DisjointClasses(:Subj4Professor :Subj13Professor)
DisjointClasses(:Subj4Professor :Subj14Professor)
DisjointClasses(:Subj4Professor :Subj15Professor)
DisjointClasses(:Subj4Professor :Subj16Professor)
DisjointClasses(:Subj4Professor :Subj17Professor)
DisjointClasses(:Subj4Professor :Subj18Professor)
DisjointClasses(:Subj4Professor :Subj19Professor)
DisjointClasses(:Subj4Professor :Subj1Professor)
DisjointClasses(:Subj4Professor :Subj20Professor)
DisjointClasses(:Subj4Professor :Subj2Professor)
DisjointClasses(:Subj4Professor :Subj3Professor)
DisjointClasses(:Subj4Professor :Subj5Professor)
DisjointClasses(:Subj4Professor :Subj6Professor)
DisjointClasses(:Subj4Professor :Subj7Professor)
DisjointClasses(:Subj4Professor :Subj8Professor)
DisjointClasses(:Subj4Professor :Subj9Professor)
Declaration(Class(:Subj4Student))
SubClassOf(:Subj4Student :Student)
Declaration(Class(:Subj5Course))
SubClassOf(:Subj5Course :Course)
DisjointClasses(:Subj5Course :Subj10Course)
DisjointClasses(:Subj5Course :Subj11Course)
DisjointClasses(:Subj5Course :Subj12Course)
DisjointClasses(:Subj5Course :Subj13Course)
DisjointClasses(:Subj5Course :Subj14Course)
DisjointClasses(:Subj5Course :Subj15Course)
DisjointClasses(:Subj5Course :Subj16Course)
DisjointClasses(:Subj5Course :Subj17Course)
DisjointClasses(:Subj5Course :Subj18Course)
DisjointClasses(:Subj5Course :Subj19Course)
DisjointClasses(:Subj5Course :Subj1Course)
DisjointClasses(:Subj5Course :Subj20Course)
DisjointClasses(:Subj5Course :Subj2Course)
DisjointClasses(:Subj5Course :Subj3Course)
DisjointClasses(:Subj5Course :Subj4Course)
DisjointClasses(:Subj5Course :Subj6Course)
DisjointClasses(:Subj5Course :Subj7Course)
DisjointClasses(:Subj5Course :Subj8Course)
DisjointClasses(:Subj5Course :Subj9Course)
Declaration(Class(:Subj5Department))
SubClassOf(:Subj5Department :Department)
DisjointClasses(:Subj5Department :Subj10Department)
DisjointClasses(:Subj5Department :Subj11Department)
DisjointClasses(:Subj5Department :Subj12Department)
DisjointClasses(:Subj5Department :Subj13Department)
DisjointClasses(:Subj5Department :Subj14Department)
DisjointClasses(:Subj5Department :Subj15Department)
DisjointClasses(:Subj5Department :Subj16Department)
DisjointClasses(:Subj5Department :Subj17Department)
DisjointClasses(:Subj5Department :Subj18Department)
DisjointClasses(:Subj5Department :Subj19Department)
DisjointClasses(:Subj5Department :Subj1Department)
DisjointClasses(:Subj5Department :Subj20Department)
DisjointClasses(:Subj5Department :Subj2Department)
DisjointClasses(:Subj5Department :Subj3Department)
DisjointClasses(:Subj5Department :Subj4Department)
DisjointClasses(:Subj5Department :Subj6Department)
DisjointClasses(:Subj5Department :Subj7Department)
DisjointClasses(:Subj5Department :Subj8Department)
DisjointClasses(:Subj5Department :Subj9Department)
Declaration(Class(:Subj5Professor))
SubClassOf(:Subj5Professor :Professor)
DisjointClasses(:Subj5Professor :Subj10Professor)
DisjointClasses(:Subj5Professor :Subj11Professor)
DisjointClasses(:Subj5Professor :Subj12Professor)
DisjointClasses(:Subj5Professor :Subj13Professor)
DisjointClasses(:Subj5Professor :Subj14Professor)
DisjointClasses(:Subj5Professor :Subj15Professor)
DisjointClasses(:Subj5Professor :Subj16Professor)
DisjointClasses(:Subj5Professor :Subj17Professor)
DisjointClasses(:Subj5Professor :Subj18Professor)
DisjointClasses(:Subj5Professor :Subj19Professor)
DisjointClasses(:Subj5Professor :Subj1Professor)
DisjointClasses(:Subj5Professor :Subj20Professor)
DisjointClasses(:Subj5Professor :Subj2Professor)
DisjointClasses(:Subj5Professor :Subj3Professor)
DisjointClasses(:Subj5Professor :Subj4Professor)
DisjointClasses(:Subj5Professor :Subj6Professor)
DisjointClasses(:Subj5Professor :Subj7Professor)
DisjointClasses(:Subj5Professor :Subj8Professor)
DisjointClasses(:Subj5Professor :Subj9Professor)
Declaration(Class(:Subj5Student))
SubClassOf(:Subj5Student :Student)
Declaration(Class(:Subj6Course))
SubClassOf(:Subj6Course :Course)
DisjointClasses(:Subj6Course :Subj10Course)
DisjointClasses(:Subj6Course :Subj11Course)
DisjointClasses(:Subj6Course :Subj12Course)
DisjointClasses(:Subj6Course :Subj13Course)
DisjointClasses(:Subj6Course :Subj14Course)
DisjointClasses(:Subj6Course :Subj15Course)
DisjointClasses(:Subj6Course :Subj16Course)
DisjointClasses(:Subj6Course :Subj17Course)
DisjointClasses(:Subj6Course :Subj18Course)
DisjointClasses(:Subj6Course :Subj19Course)
DisjointClasses(:Subj6Course :Subj1Course)
DisjointClasses(:Subj6Course :Subj20Course)
DisjointClasses(:Subj6Course :Subj2Course)
DisjointClasses(:Subj6Course :Subj3Course)
DisjointClasses(:Subj6Course :Subj4Course)
DisjointClasses(:Subj6Course :Subj5Course)
DisjointClasses(:Subj6Course :Subj7Course)
DisjointClasses(:Subj6Course :Subj8Course)
DisjointClasses(:Subj6Course :Subj9Course)
Declaration(Class(:Subj6Department))
SubClassOf(:Subj6Department :Department)
DisjointClasses(:Subj6Department :Subj10Department)
DisjointClasses(:Subj6Department :Subj11Department)
DisjointClasses(:Subj6Department :Subj12Department)
DisjointClasses(:Subj6Department :Subj13Department)
DisjointClasses(:Subj6Department :Subj14Department)
DisjointClasses(:Subj6Department :Subj15Department)
DisjointClasses(:Subj6Department :Subj16Department)
DisjointClasses(:Subj6Department :Subj17Department)
DisjointClasses(:Subj6Department :Subj18Department)
DisjointClasses(:Subj6Department :Subj19Department)
DisjointClasses(:Subj6Department :Subj1Department)
DisjointClasses(:Subj6Department :Subj20Department)
DisjointClasses(:Subj6Department :Subj2Department)
DisjointClasses(:Subj6Department :Subj3Department)
DisjointClasses(:Subj6Department :Subj4Department)
DisjointClasses(:Subj6Department :Subj5Department)
DisjointClasses(:Subj6Department :Subj7Department)
DisjointClasses(:Subj6Department :Subj8Department)
DisjointClasses(:Subj6Department :Subj9Department)
Declaration(Class(:Subj6Professor))
SubClassOf(:Subj6Professor :Professor)
DisjointClasses(:Subj6Professor :Subj10Professor)
DisjointClasses(:Subj6Professor :Subj11Professor)
DisjointClasses(:Subj6Professor :Subj12Professor)
DisjointClasses(:Subj6Professor :Subj13Professor)
DisjointClasses(:Subj6Professor :Subj14Professor)
DisjointClasses(:Subj6Professor :Subj15Professor)
DisjointClasses(:Subj6Professor :Subj16Professor)
DisjointClasses(:Subj6Professor :Subj17Professor)
DisjointClasses(:Subj6Professor :Subj18Professor)
DisjointClasses(:Subj6Professor :Subj19Professor)
DisjointClasses(:Subj6Professor :Subj1Professor)
DisjointClasses(:Subj6Professor :Subj20Professor)
DisjointClasses(:Subj6Professor :Subj2Professor)
DisjointClasses(:Subj6Professor :Subj3Professor)
DisjointClasses(:Subj6Professor :Subj4Professor)
DisjointClasses(:Subj6Professor :Subj5Professor)
DisjointClasses(:Subj6Professor :Subj7Professor)
DisjointClasses(:Subj6Professor :Subj8Professor)
DisjointClasses(:Subj6Professor :Subj9Professor)
Declaration(Class(:Subj6Student))
SubClassOf(:Subj6Student :Student)
Declaration(Class(:Subj7Course))
SubClassOf(:Subj7Course :Course)
DisjointClasses(:Subj7Course :Subj10Course)
DisjointClasses(:Subj7Course :Subj11Course)
DisjointClasses(:Subj7Course :Subj12Course)
DisjointClasses(:Subj7Course :Subj13Course)
DisjointClasses(:Subj7Course :Subj14Course)
DisjointClasses(:Subj7Course :Subj15Course)
DisjointClasses(:Subj7Course :Subj16Course)
DisjointClasses(:Subj7Course :Subj17Course)
DisjointClasses(:Subj7Course :Subj18Course)
DisjointClasses(:Subj7Course :Subj19Course)
DisjointClasses(:Subj7Course :Subj1Course)
DisjointClasses(:Subj7Course :Subj20Course)
DisjointClasses(:Subj7Course :Subj2Course)
DisjointClasses(:Subj7Course :Subj3Course)
DisjointClasses(:Subj7Course :Subj4Course)
DisjointClasses(:Subj7Course :Subj5Course)
DisjointClasses(:Subj7Course :Subj6Course)
DisjointClasses(:Subj7Course :Subj8Course)
DisjointClasses(:Subj7Course :Subj9Course)
Declaration(Class(:Subj7Department))
SubClassOf(:Subj7Department :Department)
DisjointClasses(:Subj7Department :Subj10Department)
DisjointClasses(:Subj7Department :Subj11Department)
DisjointClasses(:Subj7Department :Subj12Department)
DisjointClasses(:Subj7Department :Subj13Department)
DisjointClasses(:Subj7Department :Subj14Department)
DisjointClasses(:Subj7Department :Subj15Department)
DisjointClasses(:Subj7Department :Subj16Department)
DisjointClasses(:Subj7Department :Subj17Department)
DisjointClasses(:Subj7Department :Subj18Department)
DisjointClasses(:Subj7Department :Subj19Department)
DisjointClasses(:Subj7Department :Subj1Department)
DisjointClasses(:Subj7Department :Subj20Department)
DisjointClasses(:Subj7Department :Subj2Department)
DisjointClasses(:Subj7Department :Subj3Department)
DisjointClasses(:Subj7Department :Subj4Department)
DisjointClasses(:Subj7Department :Subj5Department)
DisjointClasses(:Subj7Department :Subj6Department)
DisjointClasses(:Subj7Department :Subj8Department)
DisjointClasses(:Subj7Department :Subj9Department)
Declaration(Class(:Subj7Professor))
SubClassOf(:Subj7Professor :Professor)
DisjointClasses(:Subj7Professor :Subj10Professor)
DisjointClasses(:Subj7Professor :Subj11Professor)
DisjointClasses(:Subj7Professor :Subj12Professor)
DisjointClasses(:Subj7Professor :Subj13Professor)
DisjointClasses(:Subj7Professor :Subj14Professor)
DisjointClasses(:Subj7Professor :Subj15Professor)
DisjointClasses(:Subj7Professor :Subj16Professor)
DisjointClasses(:Subj7Professor :Subj17Professor)
DisjointClasses(:Subj7Professor :Subj18Professor)
DisjointClasses(:Subj7Professor :Subj19Professor)
DisjointClasses(:Subj7Professor :Subj1Professor)
DisjointClasses(:Subj7Professor :Subj20Professor)
DisjointClasses(:Subj7Professor :Subj2Professor)
DisjointClasses(:Subj7Professor :Subj3Professor)
DisjointClasses(:Subj7Professor :Subj4Professor)
DisjointClasses(:Subj7Professor :Subj5Professor)
DisjointClasses(:Subj7Professor :Subj6Professor)
DisjointClasses(:Subj7Professor :Subj8Professor)
DisjointClasses(:Subj7Professor :Subj9Professor)
Declaration(Class(:Subj7Student))
SubClassOf(:Subj7Student :Student)
Declaration(Class(:Subj8Course))
SubClassOf(:Subj8Course :Course)
DisjointClasses(:Subj8Course :Subj10Course)
DisjointClasses(:Subj8Course :Subj11Course)
DisjointClasses(:Subj8Course :Subj12Course)
DisjointClasses(:Subj8Course :Subj13Course)
DisjointClasses(:Subj8Course :Subj14Course)
DisjointClasses(:Subj8Course :Subj15Course)
DisjointClasses(:Subj8Course :Subj16Course)
DisjointClasses(:Subj8Course :Subj17Course)
DisjointClasses(:Subj8Course :Subj18Course)
DisjointClasses(:Subj8Course :Subj19Course)
DisjointClasses(:Subj8Course :Subj1Course)
DisjointClasses(:Subj8Course :Subj20Course)
DisjointClasses(:Subj8Course :Subj2Course)
DisjointClasses(:Subj8Course :Subj3Course)
DisjointClasses(:Subj8Course :Subj4Course)
DisjointClasses(:Subj8Course :Subj5Course)
DisjointClasses(:Subj8Course :Subj6Course)
DisjointClasses(:Subj8Course :Subj7Course)
DisjointClasses(:Subj8Course :Subj9Course)
Declaration(Class(:Subj8Department))
SubClassOf(:Subj8Department :Department)
DisjointClasses(:Subj8Department :Subj10Department)
DisjointClasses(:Subj8Department :Subj11Department)
DisjointClasses(:Subj8Department :Subj12Department)
DisjointClasses(:Subj8Department :Subj13Department)
DisjointClasses(:Subj8Department :Subj14Department)
DisjointClasses(:Subj8Department :Subj15Department)
DisjointClasses(:Subj8Department :Subj16Department)
DisjointClasses(:Subj8Department :Subj17Department)
DisjointClasses(:Subj8Department :Subj18Department)
DisjointClasses(:Subj8Department :Subj19Department)
DisjointClasses(:Subj8Department :Subj1Department)
DisjointClasses(:Subj8Department :Subj20Department)
DisjointClasses(:Subj8Department :Subj2Department)
DisjointClasses(:Subj8Department :Subj3Department)
DisjointClasses(:Subj8Department :Subj4Department)
DisjointClasses(:Subj8Department :Subj5Department)
DisjointClasses(:Subj8Department :Subj6Department)
DisjointClasses(:Subj8Department :Subj7Department)
DisjointClasses(:Subj8Department :Subj9Department)
Declaration(Class(:Subj8Professor))
SubClassOf(:Subj8Professor :Professor)
DisjointClasses(:Subj8Professor :Subj10Professor)
DisjointClasses(:Subj8Professor :Subj11Professor)
DisjointClasses(:Subj8Professor :Subj12Professor)
DisjointClasses(:Subj8Professor :Subj13Professor)
DisjointClasses(:Subj8Professor :Subj14Professor)
DisjointClasses(:Subj8Professor :Subj15Professor)
DisjointClasses(:Subj8Professor :Subj16Professor)
DisjointClasses(:Subj8Professor :Subj17Professor)
DisjointClasses(:Subj8Professor :Subj18Professor)
DisjointClasses(:Subj8Professor :Subj19Professor)
DisjointClasses(:Subj8Professor :Subj1Professor)
DisjointClasses(:Subj8Professor :Subj20Professor)
DisjointClasses(:Subj8Professor :Subj2Professor)
DisjointClasses(:Subj8Professor :Subj3Professor)
DisjointClasses(:Subj8Professor :Subj4Professor)
DisjointClasses(:Subj8Professor :Subj5Professor)
DisjointClasses(:Subj8Professor :Subj6Professor)
DisjointClasses(:Subj8Professor :Subj7Professor)
DisjointClasses(:Subj8Professor :Subj9Professor)
Declaration(Class(:Subj8Student))
SubClassOf(:Subj8Student :Student)
Declaration(Class(:Subj9Course))
SubClassOf(:Subj9Course :Course)
DisjointClasses(:Subj9Course :Subj10Course)
DisjointClasses(:Subj9Course :Subj11Course)
DisjointClasses(:Subj9Course :Subj12Course)
DisjointClasses(:Subj9Course :Subj13Course)
DisjointClasses(:Subj9Course :Subj14Course)
DisjointClasses(:Subj9Course :Subj15Course)
DisjointClasses(:Subj9Course :Subj16Course)
DisjointClasses(:Subj9Course :Subj17Course)
DisjointClasses(:Subj9Course :Subj18Course)
DisjointClasses(:Subj9Course :Subj19Course)
DisjointClasses(:Subj9Course :Subj1Course)
DisjointClasses(:Subj9Course :Subj20Course)
DisjointClasses(:Subj9Course :Subj2Course)
DisjointClasses(:Subj9Course :Subj3Course)
DisjointClasses(:Subj9Course :Subj4Course)
DisjointClasses(:Subj9Course :Subj5Course)
DisjointClasses(:Subj9Course :Subj6Course)
DisjointClasses(:Subj9Course :Subj7Course)
DisjointClasses(:Subj9Course :Subj8Course)
Declaration(Class(:Subj9Department))
SubClassOf(:Subj9Department :Department)
DisjointClasses(:Subj9Department :Subj10Department)
DisjointClasses(:Subj9Department :Subj11Department)
DisjointClasses(:Subj9Department :Subj12Department)
DisjointClasses(:Subj9Department :Subj13Department)
DisjointClasses(:Subj9Department :Subj14Department)
DisjointClasses(:Subj9Department :Subj15Department)
DisjointClasses(:Subj9Department :Subj16Department)
DisjointClasses(:Subj9Department :Subj17Department)
DisjointClasses(:Subj9Department :Subj18Department)
DisjointClasses(:Subj9Department :Subj19Department)
DisjointClasses(:Subj9Department :Subj1Department)
DisjointClasses(:Subj9Department :Subj20Department)
DisjointClasses(:Subj9Department :Subj2Department)
DisjointClasses(:Subj9Department :Subj3Department)
DisjointClasses(:Subj9Department :Subj4Department)
DisjointClasses(:Subj9Department :Subj5Department)
DisjointClasses(:Subj9Department :Subj6Department)
DisjointClasses(:Subj9Department :Subj7Department)
DisjointClasses(:Subj9Department :Subj8Department)
Declaration(Class(:Subj9Professor))
SubClassOf(:Subj9Professor :Professor)
DisjointClasses(:Subj9Professor :Subj10Professor)
DisjointClasses(:Subj9Professor :Subj11Professor)
DisjointClasses(:Subj9Professor :Subj12Professor)
DisjointClasses(:Subj9Professor :Subj13Professor)
DisjointClasses(:Subj9Professor :Subj14Professor)
DisjointClasses(:Subj9Professor :Subj15Professor)
DisjointClasses(:Subj9Professor :Subj16Professor)
DisjointClasses(:Subj9Professor :Subj17Professor)
DisjointClasses(:Subj9Professor :Subj18Professor)
DisjointClasses(:Subj9Professor :Subj19Professor)
DisjointClasses(:Subj9Professor :Subj1Professor)
DisjointClasses(:Subj9Professor :Subj20Professor)
DisjointClasses(:Subj9Professor :Subj2Professor)
DisjointClasses(:Subj9Professor :Subj3Professor)
DisjointClasses(:Subj9Professor :Subj4Professor)
DisjointClasses(:Subj9Professor :Subj5Professor)
DisjointClasses(:Subj9Professor :Subj6Professor)
DisjointClasses(:Subj9Professor :Subj7Professor)
DisjointClasses(:Subj9Professor :Subj8Professor)
Declaration(Class(:Subj9Student))
SubClassOf(:Subj9Student :Student)
Declaration(Class(:SystemsStaff))
AnnotationAssertion(rdfs:label :SystemsStaff "systems staff worker")
SubClassOf(:SystemsStaff :AdministrativeStaff)
DisjointClasses(:SystemsStaff :ClericalStaff)
Declaration(Class(:TeachingAssistant))
AnnotationAssertion(rdfs:label :TeachingAssistant "university teaching assistant")
SubClassOf(:TeachingAssistant :Person)
SubClassOf(:TeachingAssistant ObjectSomeValuesFrom(:teachingAssistantOf :Course))
DisjointClasses(:TeachingAssistant :Director)
DisjointClasses(:TeachingAssistant :Employee)
DisjointClasses(:TeachingAssistant :chair)
Declaration(Class(:TechnicalReport))
AnnotationAssertion(rdfs:label :TechnicalReport "technical report")
SubClassOf(:TechnicalReport :Article)
DisjointClasses(:TechnicalReport :ConferencePaper)
DisjointClasses(:TechnicalReport :JournalArticle)
Declaration(Class(:UndergraduateStudent))
AnnotationAssertion(rdfs:label :UndergraduateStudent "undergraduate student")
SubClassOf(:UndergraduateStudent :Student)
Declaration(Class(:University))
AnnotationAssertion(rdfs:label :University "university")
SubClassOf(:University :Organization)
SubClassOf(:University ObjectSomeValuesFrom(ObjectInverseOf(:subOrganizationOf) :Department))
DisjointClasses(:University :College)
DisjointClasses(:University :Department)
DisjointClasses(:University :Institute)
DisjointClasses(:University :Program)
DisjointClasses(:University :ResearchGroup)
Declaration(Class(:UnofficialPublication))
AnnotationAssertion(rdfs:label :UnofficialPublication "unnoficial publication")
SubClassOf(:UnofficialPublication :Publication)
DisjointClasses(:UnofficialPublication :Article)
DisjointClasses(:UnofficialPublication :Book)
DisjointClasses(:UnofficialPublication :Manual)
DisjointClasses(:UnofficialPublication :Software)
DisjointClasses(:UnofficialPublication :Specification)
Declaration(Class(:VisitingProfessor))
AnnotationAssertion(rdfs:label :VisitingProfessor "visiting professor")
SubClassOf(:VisitingProfessor :Professor)
DisjointClasses(:VisitingProfessor :AssistantProfessor)
DisjointClasses(:VisitingProfessor :AssociateProfessor)
DisjointClasses(:VisitingProfessor :Dean)
DisjointClasses(:VisitingProfessor :ExDean)
DisjointClasses(:VisitingProfessor :FullProfessor)
Declaration(Class(:Work))
AnnotationAssertion(rdfs:label :Work "Work")
DisjointClasses(:Work :Organization)
DisjointClasses(:Work :Person)
DisjointClasses(:Work :Publication)
DisjointClasses(:Work :Schedule)
Declaration(Class(:chair))
SubClassOf(:chair :Person)
SubClassOf(:chair ObjectSomeValuesFrom(:headOf :Department))
DisjointClasses(:chair :GraduateStudent)
DisjointClasses(:chair :ResearchAssistant)
DisjointClasses(:chair :Student)
DisjointClasses(:chair :TeachingAssistant)
Declaration(ObjectProperty(:advisor))
AnnotationAssertion(rdfs:label :advisor "is being advised by")
ObjectPropertyDomain(:advisor :Person)
ObjectPropertyRange(:advisor :Professor)
DisjointObjectProperties(:advisor :affiliatedOrganizationOf)
DisjointObjectProperties(:advisor :degreeFrom)
DisjointObjectProperties(:advisor :hasAlumnus)
DisjointObjectProperties(:advisor :hasExamRecord)
DisjointObjectProperties(:advisor :hasFaculty)
DisjointObjectProperties(:advisor :isPartOfUniversity)
DisjointObjectProperties(:advisor :listedCourse)
DisjointObjectProperties(:advisor :member)
DisjointObjectProperties(:advisor :memberOf)
DisjointObjectProperties(:advisor :orgPublication)
DisjointObjectProperties(:advisor :publicationAuthor)
DisjointObjectProperties(:advisor :publicationDate)
DisjointObjectProperties(:advisor :publicationResearch)
DisjointObjectProperties(:advisor :researchProject)
DisjointObjectProperties(:advisor :softwareDocumentation)
DisjointObjectProperties(:advisor :softwareVersion)
DisjointObjectProperties(:advisor :subOrganizationOf)
DisjointObjectProperties(:advisor :takesCourse)
DisjointObjectProperties(:advisor :teacherOf)
DisjointObjectProperties(:advisor :teachingAssistantOf)
DisjointObjectProperties(:advisor :tenured)
Declaration(ObjectProperty(:affiliatedOrganizationOf))
AnnotationAssertion(rdfs:label :affiliatedOrganizationOf "is affiliated with")
ObjectPropertyDomain(:affiliatedOrganizationOf :Organization)
ObjectPropertyRange(:affiliatedOrganizationOf :Organization)
DisjointObjectProperties(:affiliatedOrganizationOf :advisor)
DisjointObjectProperties(:affiliatedOrganizationOf :degreeFrom)
DisjointObjectProperties(:affiliatedOrganizationOf :hasAlumnus)
DisjointObjectProperties(:affiliatedOrganizationOf :hasExamRecord)
DisjointObjectProperties(:affiliatedOrganizationOf :hasFaculty)
DisjointObjectProperties(:affiliatedOrganizationOf :isPartOfUniversity)
DisjointObjectProperties(:affiliatedOrganizationOf :listedCourse)
DisjointObjectProperties(:affiliatedOrganizationOf :member)
DisjointObjectProperties(:affiliatedOrganizationOf :memberOf)
DisjointObjectProperties(:affiliatedOrganizationOf :orgPublication)
DisjointObjectProperties(:affiliatedOrganizationOf :publicationAuthor)
DisjointObjectProperties(:affiliatedOrganizationOf :publicationDate)
DisjointObjectProperties(:affiliatedOrganizationOf :researchProject)
DisjointObjectProperties(:affiliatedOrganizationOf :softwareDocumentation)
DisjointObjectProperties(:affiliatedOrganizationOf :softwareVersion)
DisjointObjectProperties(:affiliatedOrganizationOf :subOrganizationOf)
DisjointObjectProperties(:affiliatedOrganizationOf :takesCourse)
DisjointObjectProperties(:affiliatedOrganizationOf :teacherOf)
DisjointObjectProperties(:affiliatedOrganizationOf :teachingAssistantOf)
DisjointObjectProperties(:affiliatedOrganizationOf :tenured)
Declaration(ObjectProperty(:degreeFrom))
AnnotationAssertion(rdfs:label :degreeFrom "has a degree from")
InverseObjectProperties(:degreeFrom :hasAlumnus)
ObjectPropertyDomain(:degreeFrom :Person)
ObjectPropertyRange(:degreeFrom :University)
DisjointObjectProperties(:degreeFrom :advisor)
DisjointObjectProperties(:degreeFrom :affiliatedOrganizationOf)
DisjointObjectProperties(:degreeFrom :hasAlumnus)
DisjointObjectProperties(:degreeFrom :hasExamRecord)
DisjointObjectProperties(:degreeFrom :hasFaculty)
DisjointObjectProperties(:degreeFrom :isPartOfUniversity)
DisjointObjectProperties(:degreeFrom :listedCourse)
DisjointObjectProperties(:degreeFrom :member)
DisjointObjectProperties(:degreeFrom :memberOf)
DisjointObjectProperties(:degreeFrom :orgPublication)
DisjointObjectProperties(:degreeFrom :publicationAuthor)
DisjointObjectProperties(:degreeFrom :publicationDate)
DisjointObjectProperties(:degreeFrom :publicationResearch)
DisjointObjectProperties(:degreeFrom :researchProject)
DisjointObjectProperties(:degreeFrom :softwareDocumentation)
DisjointObjectProperties(:degreeFrom :softwareVersion)
DisjointObjectProperties(:degreeFrom :subOrganizationOf)
DisjointObjectProperties(:degreeFrom :takesCourse)
DisjointObjectProperties(:degreeFrom :teacherOf)
DisjointObjectProperties(:degreeFrom :teachingAssistantOf)
DisjointObjectProperties(:degreeFrom :tenured)
Declaration(ObjectProperty(:doctoralDegreeFrom))
AnnotationAssertion(rdfs:label :doctoralDegreeFrom "has a doctoral degree from")
SubObjectPropertyOf(:doctoralDegreeFrom :degreeFrom)
ObjectPropertyDomain(:doctoralDegreeFrom :Person)
ObjectPropertyRange(:doctoralDegreeFrom :University)
Declaration(ObjectProperty(:hasAlumnus))
AnnotationAssertion(rdfs:label :hasAlumnus "has as an alumnus")
InverseObjectProperties(:degreeFrom :hasAlumnus)
ObjectPropertyDomain(:hasAlumnus :University)
ObjectPropertyRange(:hasAlumnus :Person)
DisjointObjectProperties(:hasAlumnus :advisor)
DisjointObjectProperties(:hasAlumnus :affiliatedOrganizationOf)
DisjointObjectProperties(:hasAlumnus :degreeFrom)
DisjointObjectProperties(:hasAlumnus :hasExamRecord)
DisjointObjectProperties(:hasAlumnus :hasFaculty)
DisjointObjectProperties(:hasAlumnus :isPartOfUniversity)
DisjointObjectProperties(:hasAlumnus :listedCourse)
DisjointObjectProperties(:hasAlumnus :member)
DisjointObjectProperties(:hasAlumnus :memberOf)
DisjointObjectProperties(:hasAlumnus :orgPublication)
DisjointObjectProperties(:hasAlumnus :publicationAuthor)
DisjointObjectProperties(:hasAlumnus :publicationDate)
DisjointObjectProperties(:hasAlumnus :publicationResearch)
DisjointObjectProperties(:hasAlumnus :researchProject)
DisjointObjectProperties(:hasAlumnus :softwareDocumentation)
DisjointObjectProperties(:hasAlumnus :softwareVersion)
DisjointObjectProperties(:hasAlumnus :subOrganizationOf)
DisjointObjectProperties(:hasAlumnus :takesCourse)
DisjointObjectProperties(:hasAlumnus :teacherOf)
DisjointObjectProperties(:hasAlumnus :teachingAssistantOf)
DisjointObjectProperties(:hasAlumnus :tenured)
Declaration(ObjectProperty(:hasExamRecord))
ObjectPropertyDomain(:hasExamRecord :Student)
ObjectPropertyRange(:hasExamRecord :ExamRecord)
DisjointObjectProperties(:hasExamRecord :advisor)
DisjointObjectProperties(:hasExamRecord :affiliatedOrganizationOf)
DisjointObjectProperties(:hasExamRecord :degreeFrom)
DisjointObjectProperties(:hasExamRecord :hasAlumnus)
DisjointObjectProperties(:hasExamRecord :hasFaculty)
DisjointObjectProperties(:hasExamRecord :isPartOfUniversity)
DisjointObjectProperties(:hasExamRecord :listedCourse)
DisjointObjectProperties(:hasExamRecord :member)
DisjointObjectProperties(:hasExamRecord :memberOf)
DisjointObjectProperties(:hasExamRecord :publicationDate)
DisjointObjectProperties(:hasExamRecord :publicationResearch)
DisjointObjectProperties(:hasExamRecord :researchProject)
DisjointObjectProperties(:hasExamRecord :softwareDocumentation)
DisjointObjectProperties(:hasExamRecord :softwareVersion)
DisjointObjectProperties(:hasExamRecord :subOrganizationOf)
DisjointObjectProperties(:hasExamRecord :takesCourse)
DisjointObjectProperties(:hasExamRecord :teachingAssistantOf)
DisjointObjectProperties(:hasExamRecord :tenured)
Declaration(ObjectProperty(:hasFaculty))
InverseObjectProperties(:isPartOfUniversity :hasFaculty)
ObjectPropertyDomain(:hasFaculty :University)
ObjectPropertyRange(:hasFaculty :Faculty)
DisjointObjectProperties(:hasFaculty :advisor)
DisjointObjectProperties(:hasFaculty :affiliatedOrganizationOf)
DisjointObjectProperties(:hasFaculty :degreeFrom)
DisjointObjectProperties(:hasFaculty :hasAlumnus)
DisjointObjectProperties(:hasFaculty :hasExamRecord)
DisjointObjectProperties(:hasFaculty :isPartOfUniversity)
DisjointObjectProperties(:hasFaculty :listedCourse)
DisjointObjectProperties(:hasFaculty :member)
DisjointObjectProperties(:hasFaculty :memberOf)
DisjointObjectProperties(:hasFaculty :orgPublication)
DisjointObjectProperties(:hasFaculty :publicationAuthor)
DisjointObjectProperties(:hasFaculty :publicationDate)
DisjointObjectProperties(:hasFaculty :publicationResearch)
DisjointObjectProperties(:hasFaculty :researchProject)
DisjointObjectProperties(:hasFaculty :softwareDocumentation)
DisjointObjectProperties(:hasFaculty :softwareVersion)
DisjointObjectProperties(:hasFaculty :subOrganizationOf)
DisjointObjectProperties(:hasFaculty :takesCourse)
DisjointObjectProperties(:hasFaculty :teacherOf)
DisjointObjectProperties(:hasFaculty :teachingAssistantOf)
DisjointObjectProperties(:hasFaculty :tenured)
Declaration(ObjectProperty(:headOf))
AnnotationAssertion(rdfs:label :headOf "is the head of")
SubObjectPropertyOf(:headOf :worksFor)
Declaration(ObjectProperty(:isPartOfUniversity))
InverseObjectProperties(:isPartOfUniversity :hasFaculty)
ObjectPropertyDomain(:isPartOfUniversity :Faculty)
ObjectPropertyRange(:isPartOfUniversity :University)
DisjointObjectProperties(:isPartOfUniversity :advisor)
DisjointObjectProperties(:isPartOfUniversity :affiliatedOrganizationOf)
DisjointObjectProperties(:isPartOfUniversity :degreeFrom)
DisjointObjectProperties(:isPartOfUniversity :hasAlumnus)
DisjointObjectProperties(:isPartOfUniversity :hasExamRecord)
DisjointObjectProperties(:isPartOfUniversity :hasFaculty)
DisjointObjectProperties(:isPartOfUniversity :listedCourse)
DisjointObjectProperties(:isPartOfUniversity :member)
DisjointObjectProperties(:isPartOfUniversity :memberOf)
DisjointObjectProperties(:isPartOfUniversity :orgPublication)
DisjointObjectProperties(:isPartOfUniversity :publicationAuthor)
DisjointObjectProperties(:isPartOfUniversity :publicationDate)
DisjointObjectProperties(:isPartOfUniversity :publicationResearch)
DisjointObjectProperties(:isPartOfUniversity :researchProject)
DisjointObjectProperties(:isPartOfUniversity :softwareDocumentation)
DisjointObjectProperties(:isPartOfUniversity :softwareVersion)
DisjointObjectProperties(:isPartOfUniversity :subOrganizationOf)
DisjointObjectProperties(:isPartOfUniversity :takesCourse)
DisjointObjectProperties(:isPartOfUniversity :teacherOf)
DisjointObjectProperties(:isPartOfUniversity :teachingAssistantOf)
DisjointObjectProperties(:isPartOfUniversity :tenured)
Declaration(ObjectProperty(:listedCourse))
AnnotationAssertion(rdfs:label :listedCourse "lists as a course")
ObjectPropertyDomain(:listedCourse :Schedule)
ObjectPropertyRange(:listedCourse :Course)
DisjointObjectProperties(:listedCourse :advisor)
DisjointObjectProperties(:listedCourse :affiliatedOrganizationOf)
DisjointObjectProperties(:listedCourse :degreeFrom)
DisjointObjectProperties(:listedCourse :hasAlumnus)
DisjointObjectProperties(:listedCourse :hasExamRecord)
DisjointObjectProperties(:listedCourse :hasFaculty)
DisjointObjectProperties(:listedCourse :isPartOfUniversity)
DisjointObjectProperties(:listedCourse :member)
DisjointObjectProperties(:listedCourse :memberOf)
DisjointObjectProperties(:listedCourse :orgPublication)
DisjointObjectProperties(:listedCourse :publicationAuthor)
DisjointObjectProperties(:listedCourse :publicationDate)
DisjointObjectProperties(:listedCourse :publicationResearch)
DisjointObjectProperties(:listedCourse :researchProject)
DisjointObjectProperties(:listedCourse :softwareDocumentation)
DisjointObjectProperties(:listedCourse :softwareVersion)
DisjointObjectProperties(:listedCourse :subOrganizationOf)
DisjointObjectProperties(:listedCourse :takesCourse)
DisjointObjectProperties(:listedCourse :teacherOf)
DisjointObjectProperties(:listedCourse :teachingAssistantOf)
DisjointObjectProperties(:listedCourse :tenured)
Declaration(ObjectProperty(:mastersDegreeFrom))
AnnotationAssertion(rdfs:label :mastersDegreeFrom "has a masters degree from")
SubObjectPropertyOf(:mastersDegreeFrom :degreeFrom)
ObjectPropertyDomain(:mastersDegreeFrom :Person)
ObjectPropertyRange(:mastersDegreeFrom :University)
Declaration(ObjectProperty(:member))
AnnotationAssertion(rdfs:label :member "has as a member")
InverseObjectProperties(:member :memberOf)
ObjectPropertyDomain(:member :Organization)
ObjectPropertyRange(:member :Person)
DisjointObjectProperties(:member :advisor)
DisjointObjectProperties(:member :affiliatedOrganizationOf)
DisjointObjectProperties(:member :degreeFrom)
DisjointObjectProperties(:member :hasAlumnus)
DisjointObjectProperties(:member :hasExamRecord)
DisjointObjectProperties(:member :hasFaculty)
DisjointObjectProperties(:member :isPartOfUniversity)
DisjointObjectProperties(:member :listedCourse)
DisjointObjectProperties(:member :memberOf)
DisjointObjectProperties(:member :orgPublication)
DisjointObjectProperties(:member :publicationAuthor)
DisjointObjectProperties(:member :publicationDate)
DisjointObjectProperties(:member :publicationResearch)
DisjointObjectProperties(:member :researchProject)
DisjointObjectProperties(:member :softwareDocumentation)
DisjointObjectProperties(:member :softwareVersion)
DisjointObjectProperties(:member :subOrganizationOf)
DisjointObjectProperties(:member :takesCourse)
DisjointObjectProperties(:member :teacherOf)
DisjointObjectProperties(:member :teachingAssistantOf)
DisjointObjectProperties(:member :tenured)
Declaration(ObjectProperty(:memberOf))
AnnotationAssertion(rdfs:label :memberOf "member of")
InverseObjectProperties(:member :memberOf)
DisjointObjectProperties(:memberOf :advisor)
DisjointObjectProperties(:memberOf :affiliatedOrganizationOf)
DisjointObjectProperties(:memberOf :degreeFrom)
DisjointObjectProperties(:memberOf :hasAlumnus)
DisjointObjectProperties(:memberOf :hasExamRecord)
DisjointObjectProperties(:memberOf :hasFaculty)
DisjointObjectProperties(:memberOf :isPartOfUniversity)
DisjointObjectProperties(:memberOf :listedCourse)
DisjointObjectProperties(:memberOf :member)
DisjointObjectProperties(:memberOf :orgPublication)
DisjointObjectProperties(:memberOf :publicationAuthor)
DisjointObjectProperties(:memberOf :publicationDate)
DisjointObjectProperties(:memberOf :publicationResearch)
DisjointObjectProperties(:memberOf :researchProject)
DisjointObjectProperties(:memberOf :softwareDocumentation)
DisjointObjectProperties(:memberOf :softwareVersion)
DisjointObjectProperties(:memberOf :subOrganizationOf)
DisjointObjectProperties(:memberOf :takesCourse)
DisjointObjectProperties(:memberOf :teacherOf)
DisjointObjectProperties(:memberOf :teachingAssistantOf)
DisjointObjectProperties(:memberOf :tenured)
Declaration(ObjectProperty(:orgPublication))
AnnotationAssertion(rdfs:label :orgPublication "publishes")
ObjectPropertyDomain(:orgPublication :Organization)
ObjectPropertyRange(:orgPublication :Publication)
DisjointObjectProperties(:orgPublication :advisor)
DisjointObjectProperties(:orgPublication :affiliatedOrganizationOf)
DisjointObjectProperties(:orgPublication :degreeFrom)
DisjointObjectProperties(:orgPublication :hasAlumnus)
DisjointObjectProperties(:orgPublication :hasFaculty)
DisjointObjectProperties(:orgPublication :isPartOfUniversity)
DisjointObjectProperties(:orgPublication :listedCourse)
DisjointObjectProperties(:orgPublication :member)
DisjointObjectProperties(:orgPublication :memberOf)
DisjointObjectProperties(:orgPublication :publicationAuthor)
DisjointObjectProperties(:orgPublication :publicationDate)
DisjointObjectProperties(:orgPublication :publicationResearch)
DisjointObjectProperties(:orgPublication :researchProject)
DisjointObjectProperties(:orgPublication :softwareDocumentation)
DisjointObjectProperties(:orgPublication :softwareVersion)
DisjointObjectProperties(:orgPublication :subOrganizationOf)
DisjointObjectProperties(:orgPublication :takesCourse)
DisjointObjectProperties(:orgPublication :teacherOf)
DisjointObjectProperties(:orgPublication :teachingAssistantOf)
DisjointObjectProperties(:orgPublication :tenured)
Declaration(ObjectProperty(:publicationAuthor))
AnnotationAssertion(rdfs:label :publicationAuthor "was written by")
ObjectPropertyDomain(:publicationAuthor :Publication)
ObjectPropertyRange(:publicationAuthor :Person)
DisjointObjectProperties(:publicationAuthor :advisor)
DisjointObjectProperties(:publicationAuthor :affiliatedOrganizationOf)
DisjointObjectProperties(:publicationAuthor :degreeFrom)
DisjointObjectProperties(:publicationAuthor :hasAlumnus)
DisjointObjectProperties(:publicationAuthor :hasFaculty)
DisjointObjectProperties(:publicationAuthor :isPartOfUniversity)
DisjointObjectProperties(:publicationAuthor :listedCourse)
DisjointObjectProperties(:publicationAuthor :member)
DisjointObjectProperties(:publicationAuthor :memberOf)
DisjointObjectProperties(:publicationAuthor :orgPublication)
DisjointObjectProperties(:publicationAuthor :publicationDate)
DisjointObjectProperties(:publicationAuthor :publicationResearch)
DisjointObjectProperties(:publicationAuthor :researchProject)
DisjointObjectProperties(:publicationAuthor :softwareDocumentation)
DisjointObjectProperties(:publicationAuthor :softwareVersion)
DisjointObjectProperties(:publicationAuthor :subOrganizationOf)
DisjointObjectProperties(:publicationAuthor :takesCourse)
DisjointObjectProperties(:publicationAuthor :teacherOf)
DisjointObjectProperties(:publicationAuthor :teachingAssistantOf)
DisjointObjectProperties(:publicationAuthor :tenured)
Declaration(ObjectProperty(:publicationDate))
AnnotationAssertion(rdfs:label :publicationDate "was written on")
ObjectPropertyDomain(:publicationDate :Publication)
DisjointObjectProperties(:publicationDate :advisor)
DisjointObjectProperties(:publicationDate :affiliatedOrganizationOf)
DisjointObjectProperties(:publicationDate :degreeFrom)
DisjointObjectProperties(:publicationDate :hasAlumnus)
DisjointObjectProperties(:publicationDate :hasExamRecord)
DisjointObjectProperties(:publicationDate :hasFaculty)
DisjointObjectProperties(:publicationDate :isPartOfUniversity)
DisjointObjectProperties(:publicationDate :listedCourse)
DisjointObjectProperties(:publicationDate :member)
DisjointObjectProperties(:publicationDate :memberOf)
DisjointObjectProperties(:publicationDate :orgPublication)
DisjointObjectProperties(:publicationDate :publicationAuthor)
DisjointObjectProperties(:publicationDate :publicationResearch)
DisjointObjectProperties(:publicationDate :researchProject)
DisjointObjectProperties(:publicationDate :softwareDocumentation)
DisjointObjectProperties(:publicationDate :softwareVersion)
DisjointObjectProperties(:publicationDate :subOrganizationOf)
DisjointObjectProperties(:publicationDate :takesCourse)
DisjointObjectProperties(:publicationDate :teacherOf)
DisjointObjectProperties(:publicationDate :teachingAssistantOf)
DisjointObjectProperties(:publicationDate :tenured)
Declaration(ObjectProperty(:publicationResearch))
AnnotationAssertion(rdfs:label :publicationResearch "is about")
ObjectPropertyDomain(:publicationResearch :Publication)
ObjectPropertyRange(:publicationResearch :Research)
DisjointObjectProperties(:publicationResearch :advisor)
DisjointObjectProperties(:publicationResearch :degreeFrom)
DisjointObjectProperties(:publicationResearch :hasAlumnus)
DisjointObjectProperties(:publicationResearch :hasExamRecord)
DisjointObjectProperties(:publicationResearch :hasFaculty)
DisjointObjectProperties(:publicationResearch :isPartOfUniversity)
DisjointObjectProperties(:publicationResearch :listedCourse)
DisjointObjectProperties(:publicationResearch :member)
DisjointObjectProperties(:publicationResearch :memberOf)
DisjointObjectProperties(:publicationResearch :orgPublication)
DisjointObjectProperties(:publicationResearch :publicationAuthor)
DisjointObjectProperties(:publicationResearch :publicationDate)
DisjointObjectProperties(:publicationResearch :researchProject)
DisjointObjectProperties(:publicationResearch :softwareDocumentation)
DisjointObjectProperties(:publicationResearch :softwareVersion)
DisjointObjectProperties(:publicationResearch :subOrganizationOf)
DisjointObjectProperties(:publicationResearch :takesCourse)
DisjointObjectProperties(:publicationResearch :teacherOf)
DisjointObjectProperties(:publicationResearch :teachingAssistantOf)
DisjointObjectProperties(:publicationResearch :tenured)
Declaration(ObjectProperty(:researchProject))
AnnotationAssertion(rdfs:label :researchProject "has as a research project")
ObjectPropertyDomain(:researchProject :ResearchGroup)
ObjectPropertyRange(:researchProject :Research)
DisjointObjectProperties(:researchProject :advisor)
DisjointObjectProperties(:researchProject :affiliatedOrganizationOf)
DisjointObjectProperties(:researchProject :degreeFrom)
DisjointObjectProperties(:researchProject :hasAlumnus)
DisjointObjectProperties(:researchProject :hasExamRecord)
DisjointObjectProperties(:researchProject :hasFaculty)
DisjointObjectProperties(:researchProject :isPartOfUniversity)
DisjointObjectProperties(:researchProject :listedCourse)
DisjointObjectProperties(:researchProject :member)
DisjointObjectProperties(:researchProject :memberOf)
DisjointObjectProperties(:researchProject :orgPublication)
DisjointObjectProperties(:researchProject :publicationAuthor)
DisjointObjectProperties(:researchProject :publicationDate)
DisjointObjectProperties(:researchProject :publicationResearch)
DisjointObjectProperties(:researchProject :softwareDocumentation)
DisjointObjectProperties(:researchProject :softwareVersion)
DisjointObjectProperties(:researchProject :subOrganizationOf)
DisjointObjectProperties(:researchProject :takesCourse)
DisjointObjectProperties(:researchProject :teacherOf)
DisjointObjectProperties(:researchProject :teachingAssistantOf)
DisjointObjectProperties(:researchProject :tenured)
Declaration(ObjectProperty(:softwareDocumentation))
AnnotationAssertion(rdfs:label :softwareDocumentation "is documented in")
ObjectPropertyDomain(:softwareDocumentation :Software)
ObjectPropertyRange(:softwareDocumentation :Publication)
DisjointObjectProperties(:softwareDocumentation :advisor)
DisjointObjectProperties(:softwareDocumentation :affiliatedOrganizationOf)
DisjointObjectProperties(:softwareDocumentation :degreeFrom)
DisjointObjectProperties(:softwareDocumentation :hasAlumnus)
DisjointObjectProperties(:softwareDocumentation :hasExamRecord)
DisjointObjectProperties(:softwareDocumentation :hasFaculty)
DisjointObjectProperties(:softwareDocumentation :isPartOfUniversity)
DisjointObjectProperties(:softwareDocumentation :listedCourse)
DisjointObjectProperties(:softwareDocumentation :member)
DisjointObjectProperties(:softwareDocumentation :memberOf)
DisjointObjectProperties(:softwareDocumentation :orgPublication)
DisjointObjectProperties(:softwareDocumentation :publicationAuthor)
DisjointObjectProperties(:softwareDocumentation :publicationDate)
DisjointObjectProperties(:softwareDocumentation :publicationResearch)
DisjointObjectProperties(:softwareDocumentation :researchProject)
DisjointObjectProperties(:softwareDocumentation :softwareVersion)
DisjointObjectProperties(:softwareDocumentation :subOrganizationOf)
DisjointObjectProperties(:softwareDocumentation :takesCourse)
DisjointObjectProperties(:softwareDocumentation :teacherOf)
DisjointObjectProperties(:softwareDocumentation :teachingAssistantOf)
DisjointObjectProperties(:softwareDocumentation :tenured)
Declaration(ObjectProperty(:softwareVersion))
AnnotationAssertion(rdfs:label :softwareVersion "is version")
ObjectPropertyDomain(:softwareVersion :Software)
DisjointObjectProperties(:softwareVersion :advisor)
DisjointObjectProperties(:softwareVersion :affiliatedOrganizationOf)
DisjointObjectProperties(:softwareVersion :degreeFrom)
DisjointObjectProperties(:softwareVersion :hasAlumnus)
DisjointObjectProperties(:softwareVersion :hasExamRecord)
DisjointObjectProperties(:softwareVersion :hasFaculty)
DisjointObjectProperties(:softwareVersion :isPartOfUniversity)
DisjointObjectProperties(:softwareVersion :listedCourse)
DisjointObjectProperties(:softwareVersion :member)
DisjointObjectProperties(:softwareVersion :memberOf)
DisjointObjectProperties(:softwareVersion :orgPublication)
DisjointObjectProperties(:softwareVersion :publicationAuthor)
DisjointObjectProperties(:softwareVersion :publicationDate)
DisjointObjectProperties(:softwareVersion :publicationResearch)
DisjointObjectProperties(:softwareVersion :researchProject)
DisjointObjectProperties(:softwareVersion :softwareDocumentation)
DisjointObjectProperties(:softwareVersion :subOrganizationOf)
DisjointObjectProperties(:softwareVersion :takesCourse)
DisjointObjectProperties(:softwareVersion :teacherOf)
DisjointObjectProperties(:softwareVersion :teachingAssistantOf)
DisjointObjectProperties(:softwareVersion :tenured)
Declaration(ObjectProperty(:subOrganizationOf))
AnnotationAssertion(rdfs:label :subOrganizationOf "is part of")
ObjectPropertyDomain(:subOrganizationOf :Organization)
ObjectPropertyRange(:subOrganizationOf :Organization)
DisjointObjectProperties(:subOrganizationOf :advisor)
DisjointObjectProperties(:subOrganizationOf :affiliatedOrganizationOf)
DisjointObjectProperties(:subOrganizationOf :degreeFrom)
DisjointObjectProperties(:subOrganizationOf :hasAlumnus)
DisjointObjectProperties(:subOrganizationOf :hasExamRecord)
DisjointObjectProperties(:subOrganizationOf :hasFaculty)
DisjointObjectProperties(:subOrganizationOf :isPartOfUniversity)
DisjointObjectProperties(:subOrganizationOf :listedCourse)
DisjointObjectProperties(:subOrganizationOf :member)
DisjointObjectProperties(:subOrganizationOf :memberOf)
DisjointObjectProperties(:subOrganizationOf :orgPublication)
DisjointObjectProperties(:subOrganizationOf :publicationAuthor)
DisjointObjectProperties(:subOrganizationOf :publicationDate)
DisjointObjectProperties(:subOrganizationOf :publicationResearch)
DisjointObjectProperties(:subOrganizationOf :researchProject)
DisjointObjectProperties(:subOrganizationOf :softwareDocumentation)
DisjointObjectProperties(:subOrganizationOf :softwareVersion)
DisjointObjectProperties(:subOrganizationOf :takesCourse)
DisjointObjectProperties(:subOrganizationOf :teacherOf)
DisjointObjectProperties(:subOrganizationOf :teachingAssistantOf)
DisjointObjectProperties(:subOrganizationOf :tenured)
Declaration(ObjectProperty(:takesCourse))
AnnotationAssertion(rdfs:label :takesCourse "is taking")
ObjectPropertyRange(:takesCourse :Course)
DisjointObjectProperties(:takesCourse :advisor)
DisjointObjectProperties(:takesCourse :affiliatedOrganizationOf)
DisjointObjectProperties(:takesCourse :degreeFrom)
DisjointObjectProperties(:takesCourse :hasAlumnus)
DisjointObjectProperties(:takesCourse :hasExamRecord)
DisjointObjectProperties(:takesCourse :hasFaculty)
DisjointObjectProperties(:takesCourse :isPartOfUniversity)
DisjointObjectProperties(:takesCourse :listedCourse)
DisjointObjectProperties(:takesCourse :member)
DisjointObjectProperties(:takesCourse :memberOf)
DisjointObjectProperties(:takesCourse :orgPublication)
DisjointObjectProperties(:takesCourse :publicationAuthor)
DisjointObjectProperties(:takesCourse :publicationDate)
DisjointObjectProperties(:takesCourse :publicationResearch)
DisjointObjectProperties(:takesCourse :researchProject)
DisjointObjectProperties(:takesCourse :softwareDocumentation)
DisjointObjectProperties(:takesCourse :softwareVersion)
DisjointObjectProperties(:takesCourse :subOrganizationOf)
DisjointObjectProperties(:takesCourse :teacherOf)
DisjointObjectProperties(:takesCourse :teachingAssistantOf)
DisjointObjectProperties(:takesCourse :tenured)
Declaration(ObjectProperty(:teacherOf))
AnnotationAssertion(rdfs:label :teacherOf "teaches")
ObjectPropertyDomain(:teacherOf :Faculty)
ObjectPropertyRange(:teacherOf :Course)
DisjointObjectProperties(:teacherOf :advisor)
DisjointObjectProperties(:teacherOf :affiliatedOrganizationOf)
DisjointObjectProperties(:teacherOf :degreeFrom)
DisjointObjectProperties(:teacherOf :hasAlumnus)
DisjointObjectProperties(:teacherOf :hasFaculty)
DisjointObjectProperties(:teacherOf :isPartOfUniversity)
DisjointObjectProperties(:teacherOf :listedCourse)
DisjointObjectProperties(:teacherOf :member)
DisjointObjectProperties(:teacherOf :memberOf)
DisjointObjectProperties(:teacherOf :orgPublication)
DisjointObjectProperties(:teacherOf :publicationAuthor)
DisjointObjectProperties(:teacherOf :publicationDate)
DisjointObjectProperties(:teacherOf :publicationResearch)
DisjointObjectProperties(:teacherOf :researchProject)
DisjointObjectProperties(:teacherOf :softwareDocumentation)
DisjointObjectProperties(:teacherOf :softwareVersion)
DisjointObjectProperties(:teacherOf :subOrganizationOf)
DisjointObjectProperties(:teacherOf :takesCourse)
DisjointObjectProperties(:teacherOf :teachingAssistantOf)
DisjointObjectProperties(:teacherOf :tenured)
Declaration(ObjectProperty(:teachingAssistantOf))
AnnotationAssertion(rdfs:label :teachingAssistantOf "is a teaching assistant for")
ObjectPropertyDomain(:teachingAssistantOf :TeachingAssistant)
ObjectPropertyRange(:teachingAssistantOf :Course)
DisjointObjectProperties(:teachingAssistantOf :advisor)
DisjointObjectProperties(:teachingAssistantOf :affiliatedOrganizationOf)
DisjointObjectProperties(:teachingAssistantOf :degreeFrom)
DisjointObjectProperties(:teachingAssistantOf :hasAlumnus)
DisjointObjectProperties(:teachingAssistantOf :hasExamRecord)
DisjointObjectProperties(:teachingAssistantOf :hasFaculty)
DisjointObjectProperties(:teachingAssistantOf :isPartOfUniversity)
DisjointObjectProperties(:teachingAssistantOf :listedCourse)
DisjointObjectProperties(:teachingAssistantOf :member)
DisjointObjectProperties(:teachingAssistantOf :memberOf)
DisjointObjectProperties(:teachingAssistantOf :orgPublication)
DisjointObjectProperties(:teachingAssistantOf :publicationAuthor)
DisjointObjectProperties(:teachingAssistantOf :publicationDate)
DisjointObjectProperties(:teachingAssistantOf :publicationResearch)
DisjointObjectProperties(:teachingAssistantOf :researchProject)
DisjointObjectProperties(:teachingAssistantOf :softwareDocumentation)
DisjointObjectProperties(:teachingAssistantOf :softwareVersion)
DisjointObjectProperties(:teachingAssistantOf :subOrganizationOf)
DisjointObjectProperties(:teachingAssistantOf :takesCourse)
DisjointObjectProperties(:teachingAssistantOf :teacherOf)
DisjointObjectProperties(:teachingAssistantOf :tenured)
Declaration(ObjectProperty(:tenured))
AnnotationAssertion(rdfs:label :tenured "is tenured:")
ObjectPropertyDomain(:tenured :Professor)
DisjointObjectProperties(:tenured :advisor)
DisjointObjectProperties(:tenured :affiliatedOrganizationOf)
DisjointObjectProperties(:tenured :degreeFrom)
DisjointObjectProperties(:tenured :hasAlumnus)
DisjointObjectProperties(:tenured :hasExamRecord)
DisjointObjectProperties(:tenured :hasFaculty)
DisjointObjectProperties(:tenured :isPartOfUniversity)
DisjointObjectProperties(:tenured :listedCourse)
DisjointObjectProperties(:tenured :member)
DisjointObjectProperties(:tenured :memberOf)
DisjointObjectProperties(:tenured :orgPublication)
DisjointObjectProperties(:tenured :publicationAuthor)
DisjointObjectProperties(:tenured :publicationDate)
DisjointObjectProperties(:tenured :publicationResearch)
DisjointObjectProperties(:tenured :researchProject)
DisjointObjectProperties(:tenured :softwareDocumentation)
DisjointObjectProperties(:tenured :softwareVersion)
DisjointObjectProperties(:tenured :subOrganizationOf)
DisjointObjectProperties(:tenured :takesCourse)
DisjointObjectProperties(:tenured :teacherOf)
DisjointObjectProperties(:tenured :teachingAssistantOf)
Declaration(ObjectProperty(:undergraduateDegreeFrom))
AnnotationAssertion(rdfs:label :undergraduateDegreeFrom "has an undergraduate degree from")
SubObjectPropertyOf(:undergraduateDegreeFrom :degreeFrom)
ObjectPropertyDomain(:undergraduateDegreeFrom :Person)
ObjectPropertyRange(:undergraduateDegreeFrom :University)
Declaration(ObjectProperty(:worksFor))
AnnotationAssertion(rdfs:label :worksFor "Works For")
SubObjectPropertyOf(:worksFor :memberOf)
ObjectPropertyDomain(:worksFor :Employee)
Declaration(DataProperty(:age))
AnnotationAssertion(rdfs:label :age "is age")
DataPropertyDomain(:age :Person)
Declaration(DataProperty(:emailAddress))
AnnotationAssertion(rdfs:label :emailAddress "can be reached at")
DataPropertyDomain(:emailAddress :Person)
Declaration(DataProperty(:name))
AnnotationAssertion(rdfs:label :name "name")
Declaration(DataProperty(:officeNumber))
AnnotationAssertion(rdfs:label :officeNumber "office room No.")
Declaration(DataProperty(:researchInterest))
AnnotationAssertion(rdfs:label :researchInterest "is researching")
Declaration(DataProperty(:telephone))
AnnotationAssertion(rdfs:label :telephone "telephone number")
DataPropertyDomain(:telephone :Person)
Declaration(DataProperty(:title))
AnnotationAssertion(rdfs:label :title "title")
DataPropertyDomain(:title :Person)
)
